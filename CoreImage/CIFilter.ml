(* auto-generated, do not modify *)

open Runtime
open Objc

[@@@ocaml.warning "-33"]
open CoreFoundation
open CoreGraphics

(** Apple docs: {{:https://developer.apple.com/documentation/coreimage/cifilter?language=objc}CIFilter} *)

let self = get_class "CIFilter"

let _CAMLParser x ~setValue ~forKey self = msg_send ~self ~cmd:(selector "CAMLParser:setValue:forKey:") ~typ:(id @-> id @-> id @-> returning void) x setValue forKey
let _CAMLType self = msg_send ~self ~cmd:(selector "CAMLType") ~typ:(returning id)
let _CAMLTypeForKey x self = msg_send ~self ~cmd:(selector "CAMLTypeForKey:") ~typ:(id @-> returning id) x
let apply x self = msg_send ~self ~cmd:(selector "apply:") ~typ:(id @-> returning id) x
let apply1 x ~arguments ~options self = msg_send ~self ~cmd:(selector "apply:arguments:options:") ~typ:(id @-> id @-> id @-> returning id) x arguments options
let apply2 x ~image ~arguments ~inSpace self = msg_send ~self ~cmd:(selector "apply:image:arguments:inSpace:") ~typ:(id @-> id @-> id @-> (ptr CGColorSpace.t) @-> returning id) x image arguments inSpace
let apply3 x ~image ~arguments ~inoutSpace self = msg_send ~self ~cmd:(selector "apply:image:arguments:inoutSpace:") ~typ:(id @-> id @-> id @-> (ptr CGColorSpace.t) @-> returning id) x image arguments inoutSpace
let attributes self = msg_send ~self ~cmd:(selector "attributes") ~typ:(returning id)
let compatibilityVersion self = msg_send ~self ~cmd:(selector "compatibilityVersion") ~typ:(returning int)
let copyWithZone x self = msg_send ~self ~cmd:(selector "copyWithZone:") ~typ:((ptr void) @-> returning id) x
let customAttributes self = msg_send ~self ~cmd:(selector "customAttributes") ~typ:(returning id)
let dealloc self = msg_send ~self ~cmd:(selector "dealloc") ~typ:(returning void)
let debugDescription self = msg_send ~self ~cmd:(selector "debugDescription") ~typ:(returning id)
let description self = msg_send ~self ~cmd:(selector "description") ~typ:(returning id)
let enabled self = msg_send ~self ~cmd:(selector "enabled") ~typ:(returning bool)
let encodeWithCAMLWriter x self = msg_send ~self ~cmd:(selector "encodeWithCAMLWriter:") ~typ:(id @-> returning void) x
let encodeWithCoder x self = msg_send ~self ~cmd:(selector "encodeWithCoder:") ~typ:(id @-> returning void) x
let finalize self = msg_send ~self ~cmd:(selector "finalize") ~typ:(returning void)
let hash self = msg_send ~self ~cmd:(selector "hash") ~typ:(returning ullong)
let init self = msg_send ~self ~cmd:(selector "init") ~typ:(returning id)
let initWithCoder x self = msg_send ~self ~cmd:(selector "initWithCoder:") ~typ:(id @-> returning id) x
let inputKeys self = msg_send ~self ~cmd:(selector "inputKeys") ~typ:(returning id)
let isEnabled self = msg_send ~self ~cmd:(selector "isEnabled") ~typ:(returning bool)
let mutableCopyWithZone x self = msg_send ~self ~cmd:(selector "mutableCopyWithZone:") ~typ:((ptr void) @-> returning id) x
let name self = msg_send ~self ~cmd:(selector "name") ~typ:(returning id)
let outputImage self = msg_send ~self ~cmd:(selector "outputImage") ~typ:(returning id)
let outputImageCatchAll x self = msg_send ~self ~cmd:(selector "outputImageCatchAll:") ~typ:(uint @-> returning id) x
let outputKeys self = msg_send ~self ~cmd:(selector "outputKeys") ~typ:(returning id)
let prewarmingString self = msg_send ~self ~cmd:(selector "prewarmingString") ~typ:(returning id)
let setDefaults self = msg_send ~self ~cmd:(selector "setDefaults") ~typ:(returning void)
let setEnabled x self = msg_send ~self ~cmd:(selector "setEnabled:") ~typ:(bool @-> returning void) x
let setIdentity self = msg_send ~self ~cmd:(selector "setIdentity") ~typ:(returning void)
let setName x self = msg_send ~self ~cmd:(selector "setName:") ~typ:(id @-> returning void) x
let setOption x ~forKey self = msg_send ~self ~cmd:(selector "setOption:forKey:") ~typ:(id @-> id @-> returning void) x forKey
let setUserInfo x self = msg_send ~self ~cmd:(selector "setUserInfo:") ~typ:(id @-> returning void) x
let setValue x ~forKey self = msg_send ~self ~cmd:(selector "setValue:forKey:") ~typ:(id @-> id @-> returning void) x forKey
let setValue' x ~forUndefinedKey self = msg_send ~self ~cmd:(selector "setValue:forUndefinedKey:") ~typ:(id @-> id @-> returning void) x forUndefinedKey
let userInfo self = msg_send ~self ~cmd:(selector "userInfo") ~typ:(returning id)
let valueForUndefinedKey x self = msg_send ~self ~cmd:(selector "valueForUndefinedKey:") ~typ:(id @-> returning id) x
let verifyPrewarmedFilter x self = msg_send ~self ~cmd:(selector "verifyPrewarmedFilter:") ~typ:(id @-> returning bool) x
let wrappedOutputImage10 self = msg_send ~self ~cmd:(selector "wrappedOutputImage10") ~typ:(returning id)
let wrappedOutputImage11 self = msg_send ~self ~cmd:(selector "wrappedOutputImage11") ~typ:(returning id)
let wrappedOutputImage12 self = msg_send ~self ~cmd:(selector "wrappedOutputImage12") ~typ:(returning id)
let wrappedOutputImage13 self = msg_send ~self ~cmd:(selector "wrappedOutputImage13") ~typ:(returning id)
let wrappedOutputImage14 self = msg_send ~self ~cmd:(selector "wrappedOutputImage14") ~typ:(returning id)
let wrappedOutputImage15 self = msg_send ~self ~cmd:(selector "wrappedOutputImage15") ~typ:(returning id)
let wrappedOutputImage16 self = msg_send ~self ~cmd:(selector "wrappedOutputImage16") ~typ:(returning id)
let wrappedOutputImage17 self = msg_send ~self ~cmd:(selector "wrappedOutputImage17") ~typ:(returning id)
let wrappedOutputImage18 self = msg_send ~self ~cmd:(selector "wrappedOutputImage18") ~typ:(returning id)
let wrappedOutputImage19 self = msg_send ~self ~cmd:(selector "wrappedOutputImage19") ~typ:(returning id)
let wrappedOutputImage20 self = msg_send ~self ~cmd:(selector "wrappedOutputImage20") ~typ:(returning id)
let wrappedOutputImage21 self = msg_send ~self ~cmd:(selector "wrappedOutputImage21") ~typ:(returning id)
let wrappedOutputImage22 self = msg_send ~self ~cmd:(selector "wrappedOutputImage22") ~typ:(returning id)
let wrappedOutputImage23 self = msg_send ~self ~cmd:(selector "wrappedOutputImage23") ~typ:(returning id)
let wrappedOutputImage24 self = msg_send ~self ~cmd:(selector "wrappedOutputImage24") ~typ:(returning id)
let wrappedOutputImage25 self = msg_send ~self ~cmd:(selector "wrappedOutputImage25") ~typ:(returning id)
let wrappedOutputImage26 self = msg_send ~self ~cmd:(selector "wrappedOutputImage26") ~typ:(returning id)
let wrappedOutputImage27 self = msg_send ~self ~cmd:(selector "wrappedOutputImage27") ~typ:(returning id)
let wrappedOutputImage28 self = msg_send ~self ~cmd:(selector "wrappedOutputImage28") ~typ:(returning id)
let wrappedOutputImage29 self = msg_send ~self ~cmd:(selector "wrappedOutputImage29") ~typ:(returning id)
let wrappedOutputImage30 self = msg_send ~self ~cmd:(selector "wrappedOutputImage30") ~typ:(returning id)
let wrappedOutputImage31 self = msg_send ~self ~cmd:(selector "wrappedOutputImage31") ~typ:(returning id)
let wrappedOutputImage32 self = msg_send ~self ~cmd:(selector "wrappedOutputImage32") ~typ:(returning id)
let wrappedOutputImage33 self = msg_send ~self ~cmd:(selector "wrappedOutputImage33") ~typ:(returning id)
let wrappedOutputImage34 self = msg_send ~self ~cmd:(selector "wrappedOutputImage34") ~typ:(returning id)
let wrappedOutputImage35 self = msg_send ~self ~cmd:(selector "wrappedOutputImage35") ~typ:(returning id)
let wrappedOutputImage36 self = msg_send ~self ~cmd:(selector "wrappedOutputImage36") ~typ:(returning id)
let wrappedOutputImage37 self = msg_send ~self ~cmd:(selector "wrappedOutputImage37") ~typ:(returning id)
let wrappedOutputImage38 self = msg_send ~self ~cmd:(selector "wrappedOutputImage38") ~typ:(returning id)
let wrappedOutputImage39 self = msg_send ~self ~cmd:(selector "wrappedOutputImage39") ~typ:(returning id)
let wrappedOutputImage40 self = msg_send ~self ~cmd:(selector "wrappedOutputImage40") ~typ:(returning id)
let wrappedOutputImage41 self = msg_send ~self ~cmd:(selector "wrappedOutputImage41") ~typ:(returning id)
let wrappedOutputImage42 self = msg_send ~self ~cmd:(selector "wrappedOutputImage42") ~typ:(returning id)
let wrappedOutputImage43 self = msg_send ~self ~cmd:(selector "wrappedOutputImage43") ~typ:(returning id)
let wrappedOutputImage44 self = msg_send ~self ~cmd:(selector "wrappedOutputImage44") ~typ:(returning id)
let wrappedOutputImage45 self = msg_send ~self ~cmd:(selector "wrappedOutputImage45") ~typ:(returning id)
let wrappedOutputImage46 self = msg_send ~self ~cmd:(selector "wrappedOutputImage46") ~typ:(returning id)
let wrappedOutputImage47 self = msg_send ~self ~cmd:(selector "wrappedOutputImage47") ~typ:(returning id)
let wrappedOutputImage48 self = msg_send ~self ~cmd:(selector "wrappedOutputImage48") ~typ:(returning id)
let wrappedOutputImage49 self = msg_send ~self ~cmd:(selector "wrappedOutputImage49") ~typ:(returning id)
let wrappedOutputImage50 self = msg_send ~self ~cmd:(selector "wrappedOutputImage50") ~typ:(returning id)
let wrappedOutputImage51 self = msg_send ~self ~cmd:(selector "wrappedOutputImage51") ~typ:(returning id)
let wrappedOutputImage52 self = msg_send ~self ~cmd:(selector "wrappedOutputImage52") ~typ:(returning id)
let wrappedOutputImage53 self = msg_send ~self ~cmd:(selector "wrappedOutputImage53") ~typ:(returning id)
let wrappedOutputImage54 self = msg_send ~self ~cmd:(selector "wrappedOutputImage54") ~typ:(returning id)
let wrappedOutputImage55 self = msg_send ~self ~cmd:(selector "wrappedOutputImage55") ~typ:(returning id)
let wrappedOutputImage56 self = msg_send ~self ~cmd:(selector "wrappedOutputImage56") ~typ:(returning id)
let wrappedOutputImage57 self = msg_send ~self ~cmd:(selector "wrappedOutputImage57") ~typ:(returning id)
let wrappedOutputImage58 self = msg_send ~self ~cmd:(selector "wrappedOutputImage58") ~typ:(returning id)
let wrappedOutputImage59 self = msg_send ~self ~cmd:(selector "wrappedOutputImage59") ~typ:(returning id)
let wrappedOutputImage60 self = msg_send ~self ~cmd:(selector "wrappedOutputImage60") ~typ:(returning id)
let wrappedOutputImage61 self = msg_send ~self ~cmd:(selector "wrappedOutputImage61") ~typ:(returning id)
let wrappedOutputImage62 self = msg_send ~self ~cmd:(selector "wrappedOutputImage62") ~typ:(returning id)
let wrappedOutputImage63 self = msg_send ~self ~cmd:(selector "wrappedOutputImage63") ~typ:(returning id)
let wrappedOutputImage64 self = msg_send ~self ~cmd:(selector "wrappedOutputImage64") ~typ:(returning id)
let wrappedOutputImage65 self = msg_send ~self ~cmd:(selector "wrappedOutputImage65") ~typ:(returning id)
let wrappedOutputImage66 self = msg_send ~self ~cmd:(selector "wrappedOutputImage66") ~typ:(returning id)
let wrappedOutputImage67 self = msg_send ~self ~cmd:(selector "wrappedOutputImage67") ~typ:(returning id)
let wrappedOutputImage68 self = msg_send ~self ~cmd:(selector "wrappedOutputImage68") ~typ:(returning id)
let wrappedOutputImage69 self = msg_send ~self ~cmd:(selector "wrappedOutputImage69") ~typ:(returning id)
let wrappedOutputImage70 self = msg_send ~self ~cmd:(selector "wrappedOutputImage70") ~typ:(returning id)
let wrappedOutputImage71 self = msg_send ~self ~cmd:(selector "wrappedOutputImage71") ~typ:(returning id)
let wrappedOutputImage72 self = msg_send ~self ~cmd:(selector "wrappedOutputImage72") ~typ:(returning id)
let wrappedOutputImage73 self = msg_send ~self ~cmd:(selector "wrappedOutputImage73") ~typ:(returning id)
let wrappedOutputImage74 self = msg_send ~self ~cmd:(selector "wrappedOutputImage74") ~typ:(returning id)
let wrappedOutputImage75 self = msg_send ~self ~cmd:(selector "wrappedOutputImage75") ~typ:(returning id)
let wrappedOutputImage76 self = msg_send ~self ~cmd:(selector "wrappedOutputImage76") ~typ:(returning id)
let wrappedOutputImage77 self = msg_send ~self ~cmd:(selector "wrappedOutputImage77") ~typ:(returning id)
let wrappedOutputImage78 self = msg_send ~self ~cmd:(selector "wrappedOutputImage78") ~typ:(returning id)
let wrappedOutputImage79 self = msg_send ~self ~cmd:(selector "wrappedOutputImage79") ~typ:(returning id)
let wrappedOutputImage80 self = msg_send ~self ~cmd:(selector "wrappedOutputImage80") ~typ:(returning id)
let wrappedOutputImage81 self = msg_send ~self ~cmd:(selector "wrappedOutputImage81") ~typ:(returning id)
let wrappedOutputImage82 self = msg_send ~self ~cmd:(selector "wrappedOutputImage82") ~typ:(returning id)
let wrappedOutputImage83 self = msg_send ~self ~cmd:(selector "wrappedOutputImage83") ~typ:(returning id)
let wrappedOutputImage84 self = msg_send ~self ~cmd:(selector "wrappedOutputImage84") ~typ:(returning id)
let wrappedOutputImage85 self = msg_send ~self ~cmd:(selector "wrappedOutputImage85") ~typ:(returning id)
let wrappedOutputImage86 self = msg_send ~self ~cmd:(selector "wrappedOutputImage86") ~typ:(returning id)
let wrappedOutputImage87 self = msg_send ~self ~cmd:(selector "wrappedOutputImage87") ~typ:(returning id)
let wrappedOutputImage88 self = msg_send ~self ~cmd:(selector "wrappedOutputImage88") ~typ:(returning id)
let wrappedOutputImage89 self = msg_send ~self ~cmd:(selector "wrappedOutputImage89") ~typ:(returning id)
let wrappedOutputImage90 self = msg_send ~self ~cmd:(selector "wrappedOutputImage90") ~typ:(returning id)
let wrappedOutputImage91 self = msg_send ~self ~cmd:(selector "wrappedOutputImage91") ~typ:(returning id)
let wrappedOutputImage92 self = msg_send ~self ~cmd:(selector "wrappedOutputImage92") ~typ:(returning id)
let wrappedOutputImage93 self = msg_send ~self ~cmd:(selector "wrappedOutputImage93") ~typ:(returning id)
let wrappedOutputImage94 self = msg_send ~self ~cmd:(selector "wrappedOutputImage94") ~typ:(returning id)
let wrappedOutputImage95 self = msg_send ~self ~cmd:(selector "wrappedOutputImage95") ~typ:(returning id)
let wrappedOutputImage96 self = msg_send ~self ~cmd:(selector "wrappedOutputImage96") ~typ:(returning id)
let wrappedOutputImage97 self = msg_send ~self ~cmd:(selector "wrappedOutputImage97") ~typ:(returning id)
let wrappedOutputImage98 self = msg_send ~self ~cmd:(selector "wrappedOutputImage98") ~typ:(returning id)
let wrappedOutputImage99 self = msg_send ~self ~cmd:(selector "wrappedOutputImage99") ~typ:(returning id)