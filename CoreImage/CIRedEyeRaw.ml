(* auto-generated, do not modify *)

open Runtime
open Objc

[@@@ocaml.warning "-33"]
open CoreFoundation
open CoreGraphics

(** Apple docs: {{:https://developer.apple.com/documentation/coreimage/ciredeyeraw?language=objc}CIRedEyeRaw} *)

let self = get_class "CIRedEyeRaw"

let inputAbortDensityDiff self = msg_send ~self ~cmd:(selector "inputAbortDensityDiff") ~typ:(returning id)
let inputAbortDensityLo self = msg_send ~self ~cmd:(selector "inputAbortDensityLo") ~typ:(returning id)
let inputAxisLongLeft self = msg_send ~self ~cmd:(selector "inputAxisLongLeft") ~typ:(returning id)
let inputAxisLongRight self = msg_send ~self ~cmd:(selector "inputAxisLongRight") ~typ:(returning id)
let inputAxisShortLeft self = msg_send ~self ~cmd:(selector "inputAxisShortLeft") ~typ:(returning id)
let inputAxisShortRight self = msg_send ~self ~cmd:(selector "inputAxisShortRight") ~typ:(returning id)
let inputCenterSpecRad self = msg_send ~self ~cmd:(selector "inputCenterSpecRad") ~typ:(returning id)
let inputCentroidGamma self = msg_send ~self ~cmd:(selector "inputCentroidGamma") ~typ:(returning id)
let inputCentroidIterations self = msg_send ~self ~cmd:(selector "inputCentroidIterations") ~typ:(returning id)
let inputCentroidRadius self = msg_send ~self ~cmd:(selector "inputCentroidRadius") ~typ:(returning id)
let inputCentroidRadiusSmall self = msg_send ~self ~cmd:(selector "inputCentroidRadiusSmall") ~typ:(returning id)
let inputCircularity self = msg_send ~self ~cmd:(selector "inputCircularity") ~typ:(returning id)
let inputClipMin self = msg_send ~self ~cmd:(selector "inputClipMin") ~typ:(returning id)
let inputClosingDilation self = msg_send ~self ~cmd:(selector "inputClosingDilation") ~typ:(returning id)
let inputClosingErosion self = msg_send ~self ~cmd:(selector "inputClosingErosion") ~typ:(returning id)
let inputCutoff self = msg_send ~self ~cmd:(selector "inputCutoff") ~typ:(returning id)
let inputDetectRed self = msg_send ~self ~cmd:(selector "inputDetectRed") ~typ:(returning id)
let inputDetectWhite self = msg_send ~self ~cmd:(selector "inputDetectWhite") ~typ:(returning id)
let inputDetectionThresholdIrisLarge self = msg_send ~self ~cmd:(selector "inputDetectionThresholdIrisLarge") ~typ:(returning id)
let inputDetectionThresholdIrisMedium self = msg_send ~self ~cmd:(selector "inputDetectionThresholdIrisMedium") ~typ:(returning id)
let inputDetectionThresholdIrisSmall self = msg_send ~self ~cmd:(selector "inputDetectionThresholdIrisSmall") ~typ:(returning id)
let inputDetectionThresholdScleraLarge self = msg_send ~self ~cmd:(selector "inputDetectionThresholdScleraLarge") ~typ:(returning id)
let inputDetectionThresholdScleraMedium self = msg_send ~self ~cmd:(selector "inputDetectionThresholdScleraMedium") ~typ:(returning id)
let inputDetectionThresholdScleraSmall self = msg_send ~self ~cmd:(selector "inputDetectionThresholdScleraSmall") ~typ:(returning id)
let inputDetectionThresholdSkinLarge self = msg_send ~self ~cmd:(selector "inputDetectionThresholdSkinLarge") ~typ:(returning id)
let inputDetectionThresholdSkinMedium self = msg_send ~self ~cmd:(selector "inputDetectionThresholdSkinMedium") ~typ:(returning id)
let inputDetectionThresholdSkinSmall self = msg_send ~self ~cmd:(selector "inputDetectionThresholdSkinSmall") ~typ:(returning id)
let inputFSmooth self = msg_send ~self ~cmd:(selector "inputFSmooth") ~typ:(returning id)
let inputFalloffDensity self = msg_send ~self ~cmd:(selector "inputFalloffDensity") ~typ:(returning id)
let inputFalloffRepair self = msg_send ~self ~cmd:(selector "inputFalloffRepair") ~typ:(returning id)
let inputFalloffSpecular self = msg_send ~self ~cmd:(selector "inputFalloffSpecular") ~typ:(returning id)
let inputFeathering self = msg_send ~self ~cmd:(selector "inputFeathering") ~typ:(returning id)
let inputFlooding self = msg_send ~self ~cmd:(selector "inputFlooding") ~typ:(returning id)
let inputGamma self = msg_send ~self ~cmd:(selector "inputGamma") ~typ:(returning id)
let inputGlintThreshold self = msg_send ~self ~cmd:(selector "inputGlintThreshold") ~typ:(returning id)
let inputInterPeakMin self = msg_send ~self ~cmd:(selector "inputInterPeakMin") ~typ:(returning id)
let inputIntersect self = msg_send ~self ~cmd:(selector "inputIntersect") ~typ:(returning id)
let inputIrisMask self = msg_send ~self ~cmd:(selector "inputIrisMask") ~typ:(returning id)
let inputMaxInterDispersion self = msg_send ~self ~cmd:(selector "inputMaxInterDispersion") ~typ:(returning id)
let inputMidSpectrumWhiteOffsetsX self = msg_send ~self ~cmd:(selector "inputMidSpectrumWhiteOffsetsX") ~typ:(returning id)
let inputMidSpectrumWhiteOffsetsY self = msg_send ~self ~cmd:(selector "inputMidSpectrumWhiteOffsetsY") ~typ:(returning id)
let inputMinInterDispersion self = msg_send ~self ~cmd:(selector "inputMinInterDispersion") ~typ:(returning id)
let inputMinMaskDiff self = msg_send ~self ~cmd:(selector "inputMinMaskDiff") ~typ:(returning id)
let inputOrientationHint self = msg_send ~self ~cmd:(selector "inputOrientationHint") ~typ:(returning id)
let inputOrientationScale self = msg_send ~self ~cmd:(selector "inputOrientationScale") ~typ:(returning id)
let inputOriginLeft self = msg_send ~self ~cmd:(selector "inputOriginLeft") ~typ:(returning id)
let inputOriginRight self = msg_send ~self ~cmd:(selector "inputOriginRight") ~typ:(returning id)
let inputParam self = msg_send ~self ~cmd:(selector "inputParam") ~typ:(returning id)
let inputParam2 self = msg_send ~self ~cmd:(selector "inputParam2") ~typ:(returning id)
let inputParam3 self = msg_send ~self ~cmd:(selector "inputParam3") ~typ:(returning id)
let inputParam4 self = msg_send ~self ~cmd:(selector "inputParam4") ~typ:(returning id)
let inputPrimary self = msg_send ~self ~cmd:(selector "inputPrimary") ~typ:(returning id)
let inputPupilCenterLeft self = msg_send ~self ~cmd:(selector "inputPupilCenterLeft") ~typ:(returning id)
let inputPupilCenterRight self = msg_send ~self ~cmd:(selector "inputPupilCenterRight") ~typ:(returning id)
let inputRadiusDensity self = msg_send ~self ~cmd:(selector "inputRadiusDensity") ~typ:(returning id)
let inputRadiusRepair self = msg_send ~self ~cmd:(selector "inputRadiusRepair") ~typ:(returning id)
let inputRadiusSpecular self = msg_send ~self ~cmd:(selector "inputRadiusSpecular") ~typ:(returning id)
let inputRecover self = msg_send ~self ~cmd:(selector "inputRecover") ~typ:(returning id)
let inputRefilterRange self = msg_send ~self ~cmd:(selector "inputRefilterRange") ~typ:(returning id)
let inputRefilterSpace self = msg_send ~self ~cmd:(selector "inputRefilterSpace") ~typ:(returning id)
let inputRepairChroma self = msg_send ~self ~cmd:(selector "inputRepairChroma") ~typ:(returning id)
let inputRepairDarken self = msg_send ~self ~cmd:(selector "inputRepairDarken") ~typ:(returning id)
let inputRepairDither self = msg_send ~self ~cmd:(selector "inputRepairDither") ~typ:(returning id)
let inputRepairPercent self = msg_send ~self ~cmd:(selector "inputRepairPercent") ~typ:(returning id)
let inputRepairPercentile self = msg_send ~self ~cmd:(selector "inputRepairPercentile") ~typ:(returning id)
let inputRepairSource self = msg_send ~self ~cmd:(selector "inputRepairSource") ~typ:(returning id)
let inputScale self = msg_send ~self ~cmd:(selector "inputScale") ~typ:(returning id)
let inputScleraMask self = msg_send ~self ~cmd:(selector "inputScleraMask") ~typ:(returning id)
let inputScleraProtectionThresholdIrisLarge self = msg_send ~self ~cmd:(selector "inputScleraProtectionThresholdIrisLarge") ~typ:(returning id)
let inputScleraProtectionThresholdIrisMedium self = msg_send ~self ~cmd:(selector "inputScleraProtectionThresholdIrisMedium") ~typ:(returning id)
let inputScleraProtectionThresholdIrisSmall self = msg_send ~self ~cmd:(selector "inputScleraProtectionThresholdIrisSmall") ~typ:(returning id)
let inputScleraProtectionThresholdScleraLarge self = msg_send ~self ~cmd:(selector "inputScleraProtectionThresholdScleraLarge") ~typ:(returning id)
let inputScleraProtectionThresholdScleraMedium self = msg_send ~self ~cmd:(selector "inputScleraProtectionThresholdScleraMedium") ~typ:(returning id)
let inputScleraProtectionThresholdScleraSmall self = msg_send ~self ~cmd:(selector "inputScleraProtectionThresholdScleraSmall") ~typ:(returning id)
let inputScleraProtectionThresholdSkinLarge self = msg_send ~self ~cmd:(selector "inputScleraProtectionThresholdSkinLarge") ~typ:(returning id)
let inputScleraProtectionThresholdSkinMedium self = msg_send ~self ~cmd:(selector "inputScleraProtectionThresholdSkinMedium") ~typ:(returning id)
let inputScleraProtectionThresholdSkinSmall self = msg_send ~self ~cmd:(selector "inputScleraProtectionThresholdSkinSmall") ~typ:(returning id)
let inputScleraThreshold self = msg_send ~self ~cmd:(selector "inputScleraThreshold") ~typ:(returning id)
let inputSearchLong self = msg_send ~self ~cmd:(selector "inputSearchLong") ~typ:(returning id)
let inputSearchShort self = msg_send ~self ~cmd:(selector "inputSearchShort") ~typ:(returning id)
let inputSecondary self = msg_send ~self ~cmd:(selector "inputSecondary") ~typ:(returning id)
let inputShowMask self = msg_send ~self ~cmd:(selector "inputShowMask") ~typ:(returning id)
let inputSize self = msg_send ~self ~cmd:(selector "inputSize") ~typ:(returning id)
let inputSkinMask self = msg_send ~self ~cmd:(selector "inputSkinMask") ~typ:(returning id)
let inputSkinProtectionThresholdLarge self = msg_send ~self ~cmd:(selector "inputSkinProtectionThresholdLarge") ~typ:(returning id)
let inputSkinProtectionThresholdMedium self = msg_send ~self ~cmd:(selector "inputSkinProtectionThresholdMedium") ~typ:(returning id)
let inputSkinProtectionThresholdSmall self = msg_send ~self ~cmd:(selector "inputSkinProtectionThresholdSmall") ~typ:(returning id)
let inputSkinThreshold self = msg_send ~self ~cmd:(selector "inputSkinThreshold") ~typ:(returning id)
let inputSkinThresholdMed self = msg_send ~self ~cmd:(selector "inputSkinThresholdMed") ~typ:(returning id)
let inputSpecArea self = msg_send ~self ~cmd:(selector "inputSpecArea") ~typ:(returning id)
let inputSpecAreaScale self = msg_send ~self ~cmd:(selector "inputSpecAreaScale") ~typ:(returning id)
let inputSpecIntensity self = msg_send ~self ~cmd:(selector "inputSpecIntensity") ~typ:(returning id)
let inputSpecMax self = msg_send ~self ~cmd:(selector "inputSpecMax") ~typ:(returning id)
let inputSpecMin self = msg_send ~self ~cmd:(selector "inputSpecMin") ~typ:(returning id)
let inputSpecular self = msg_send ~self ~cmd:(selector "inputSpecular") ~typ:(returning id)
let inputSpecularCutoff self = msg_send ~self ~cmd:(selector "inputSpecularCutoff") ~typ:(returning id)
let inputSplat self = msg_send ~self ~cmd:(selector "inputSplat") ~typ:(returning id)
let inputTargetClosing self = msg_send ~self ~cmd:(selector "inputTargetClosing") ~typ:(returning id)
let inputUseFaceSegmentationMask self = msg_send ~self ~cmd:(selector "inputUseFaceSegmentationMask") ~typ:(returning id)
let inputWhiteCutoff self = msg_send ~self ~cmd:(selector "inputWhiteCutoff") ~typ:(returning id)
let irisProtectionMaskWithThresholdIris x ~thresholdSclera ~thresholdSkin self = msg_send ~self ~cmd:(selector "irisProtectionMaskWithThresholdIris:thresholdSclera:thresholdSkin:") ~typ:(float @-> float @-> float @-> returning id) x thresholdSclera thresholdSkin
let outputImage self = msg_send ~self ~cmd:(selector "outputImage") ~typ:(returning id)
let setInputAbortDensityDiff x self = msg_send ~self ~cmd:(selector "setInputAbortDensityDiff:") ~typ:(id @-> returning void) x
let setInputAbortDensityLo x self = msg_send ~self ~cmd:(selector "setInputAbortDensityLo:") ~typ:(id @-> returning void) x
let setInputAxisLongLeft x self = msg_send ~self ~cmd:(selector "setInputAxisLongLeft:") ~typ:(id @-> returning void) x
let setInputAxisLongRight x self = msg_send ~self ~cmd:(selector "setInputAxisLongRight:") ~typ:(id @-> returning void) x
let setInputAxisShortLeft x self = msg_send ~self ~cmd:(selector "setInputAxisShortLeft:") ~typ:(id @-> returning void) x
let setInputAxisShortRight x self = msg_send ~self ~cmd:(selector "setInputAxisShortRight:") ~typ:(id @-> returning void) x
let setInputCenterSpecRad x self = msg_send ~self ~cmd:(selector "setInputCenterSpecRad:") ~typ:(id @-> returning void) x
let setInputCentroidGamma x self = msg_send ~self ~cmd:(selector "setInputCentroidGamma:") ~typ:(id @-> returning void) x
let setInputCentroidIterations x self = msg_send ~self ~cmd:(selector "setInputCentroidIterations:") ~typ:(id @-> returning void) x
let setInputCentroidRadius x self = msg_send ~self ~cmd:(selector "setInputCentroidRadius:") ~typ:(id @-> returning void) x
let setInputCentroidRadiusSmall x self = msg_send ~self ~cmd:(selector "setInputCentroidRadiusSmall:") ~typ:(id @-> returning void) x
let setInputCircularity x self = msg_send ~self ~cmd:(selector "setInputCircularity:") ~typ:(id @-> returning void) x
let setInputClipMin x self = msg_send ~self ~cmd:(selector "setInputClipMin:") ~typ:(id @-> returning void) x
let setInputClosingDilation x self = msg_send ~self ~cmd:(selector "setInputClosingDilation:") ~typ:(id @-> returning void) x
let setInputClosingErosion x self = msg_send ~self ~cmd:(selector "setInputClosingErosion:") ~typ:(id @-> returning void) x
let setInputCutoff x self = msg_send ~self ~cmd:(selector "setInputCutoff:") ~typ:(id @-> returning void) x
let setInputDetectRed x self = msg_send ~self ~cmd:(selector "setInputDetectRed:") ~typ:(id @-> returning void) x
let setInputDetectWhite x self = msg_send ~self ~cmd:(selector "setInputDetectWhite:") ~typ:(id @-> returning void) x
let setInputDetectionThresholdIrisLarge x self = msg_send ~self ~cmd:(selector "setInputDetectionThresholdIrisLarge:") ~typ:(id @-> returning void) x
let setInputDetectionThresholdIrisMedium x self = msg_send ~self ~cmd:(selector "setInputDetectionThresholdIrisMedium:") ~typ:(id @-> returning void) x
let setInputDetectionThresholdIrisSmall x self = msg_send ~self ~cmd:(selector "setInputDetectionThresholdIrisSmall:") ~typ:(id @-> returning void) x
let setInputDetectionThresholdScleraLarge x self = msg_send ~self ~cmd:(selector "setInputDetectionThresholdScleraLarge:") ~typ:(id @-> returning void) x
let setInputDetectionThresholdScleraMedium x self = msg_send ~self ~cmd:(selector "setInputDetectionThresholdScleraMedium:") ~typ:(id @-> returning void) x
let setInputDetectionThresholdScleraSmall x self = msg_send ~self ~cmd:(selector "setInputDetectionThresholdScleraSmall:") ~typ:(id @-> returning void) x
let setInputDetectionThresholdSkinLarge x self = msg_send ~self ~cmd:(selector "setInputDetectionThresholdSkinLarge:") ~typ:(id @-> returning void) x
let setInputDetectionThresholdSkinMedium x self = msg_send ~self ~cmd:(selector "setInputDetectionThresholdSkinMedium:") ~typ:(id @-> returning void) x
let setInputDetectionThresholdSkinSmall x self = msg_send ~self ~cmd:(selector "setInputDetectionThresholdSkinSmall:") ~typ:(id @-> returning void) x
let setInputFSmooth x self = msg_send ~self ~cmd:(selector "setInputFSmooth:") ~typ:(id @-> returning void) x
let setInputFalloffDensity x self = msg_send ~self ~cmd:(selector "setInputFalloffDensity:") ~typ:(id @-> returning void) x
let setInputFalloffRepair x self = msg_send ~self ~cmd:(selector "setInputFalloffRepair:") ~typ:(id @-> returning void) x
let setInputFalloffSpecular x self = msg_send ~self ~cmd:(selector "setInputFalloffSpecular:") ~typ:(id @-> returning void) x
let setInputFeathering x self = msg_send ~self ~cmd:(selector "setInputFeathering:") ~typ:(id @-> returning void) x
let setInputFlooding x self = msg_send ~self ~cmd:(selector "setInputFlooding:") ~typ:(id @-> returning void) x
let setInputGamma x self = msg_send ~self ~cmd:(selector "setInputGamma:") ~typ:(id @-> returning void) x
let setInputGlintThreshold x self = msg_send ~self ~cmd:(selector "setInputGlintThreshold:") ~typ:(id @-> returning void) x
let setInputInterPeakMin x self = msg_send ~self ~cmd:(selector "setInputInterPeakMin:") ~typ:(id @-> returning void) x
let setInputIntersect x self = msg_send ~self ~cmd:(selector "setInputIntersect:") ~typ:(id @-> returning void) x
let setInputIrisMask x self = msg_send ~self ~cmd:(selector "setInputIrisMask:") ~typ:(id @-> returning void) x
let setInputMaxInterDispersion x self = msg_send ~self ~cmd:(selector "setInputMaxInterDispersion:") ~typ:(id @-> returning void) x
let setInputMidSpectrumWhiteOffsetsX x self = msg_send ~self ~cmd:(selector "setInputMidSpectrumWhiteOffsetsX:") ~typ:(id @-> returning void) x
let setInputMidSpectrumWhiteOffsetsY x self = msg_send ~self ~cmd:(selector "setInputMidSpectrumWhiteOffsetsY:") ~typ:(id @-> returning void) x
let setInputMinInterDispersion x self = msg_send ~self ~cmd:(selector "setInputMinInterDispersion:") ~typ:(id @-> returning void) x
let setInputMinMaskDiff x self = msg_send ~self ~cmd:(selector "setInputMinMaskDiff:") ~typ:(id @-> returning void) x
let setInputOrientationHint x self = msg_send ~self ~cmd:(selector "setInputOrientationHint:") ~typ:(id @-> returning void) x
let setInputOrientationScale x self = msg_send ~self ~cmd:(selector "setInputOrientationScale:") ~typ:(id @-> returning void) x
let setInputOriginLeft x self = msg_send ~self ~cmd:(selector "setInputOriginLeft:") ~typ:(id @-> returning void) x
let setInputOriginRight x self = msg_send ~self ~cmd:(selector "setInputOriginRight:") ~typ:(id @-> returning void) x
let setInputParam2 x self = msg_send ~self ~cmd:(selector "setInputParam2:") ~typ:(id @-> returning void) x
let setInputParam3 x self = msg_send ~self ~cmd:(selector "setInputParam3:") ~typ:(id @-> returning void) x
let setInputParam4 x self = msg_send ~self ~cmd:(selector "setInputParam4:") ~typ:(id @-> returning void) x
let setInputParam x self = msg_send ~self ~cmd:(selector "setInputParam:") ~typ:(id @-> returning void) x
let setInputPrimary x self = msg_send ~self ~cmd:(selector "setInputPrimary:") ~typ:(id @-> returning void) x
let setInputPupilCenterLeft x self = msg_send ~self ~cmd:(selector "setInputPupilCenterLeft:") ~typ:(id @-> returning void) x
let setInputPupilCenterRight x self = msg_send ~self ~cmd:(selector "setInputPupilCenterRight:") ~typ:(id @-> returning void) x
let setInputRadiusDensity x self = msg_send ~self ~cmd:(selector "setInputRadiusDensity:") ~typ:(id @-> returning void) x
let setInputRadiusRepair x self = msg_send ~self ~cmd:(selector "setInputRadiusRepair:") ~typ:(id @-> returning void) x
let setInputRadiusSpecular x self = msg_send ~self ~cmd:(selector "setInputRadiusSpecular:") ~typ:(id @-> returning void) x
let setInputRecover x self = msg_send ~self ~cmd:(selector "setInputRecover:") ~typ:(id @-> returning void) x
let setInputRefilterRange x self = msg_send ~self ~cmd:(selector "setInputRefilterRange:") ~typ:(id @-> returning void) x
let setInputRefilterSpace x self = msg_send ~self ~cmd:(selector "setInputRefilterSpace:") ~typ:(id @-> returning void) x
let setInputRepairChroma x self = msg_send ~self ~cmd:(selector "setInputRepairChroma:") ~typ:(id @-> returning void) x
let setInputRepairDarken x self = msg_send ~self ~cmd:(selector "setInputRepairDarken:") ~typ:(id @-> returning void) x
let setInputRepairDither x self = msg_send ~self ~cmd:(selector "setInputRepairDither:") ~typ:(id @-> returning void) x
let setInputRepairPercent x self = msg_send ~self ~cmd:(selector "setInputRepairPercent:") ~typ:(id @-> returning void) x
let setInputRepairPercentile x self = msg_send ~self ~cmd:(selector "setInputRepairPercentile:") ~typ:(id @-> returning void) x
let setInputRepairSource x self = msg_send ~self ~cmd:(selector "setInputRepairSource:") ~typ:(id @-> returning void) x
let setInputScale x self = msg_send ~self ~cmd:(selector "setInputScale:") ~typ:(id @-> returning void) x
let setInputScleraMask x self = msg_send ~self ~cmd:(selector "setInputScleraMask:") ~typ:(id @-> returning void) x
let setInputScleraProtectionThresholdIrisLarge x self = msg_send ~self ~cmd:(selector "setInputScleraProtectionThresholdIrisLarge:") ~typ:(id @-> returning void) x
let setInputScleraProtectionThresholdIrisMedium x self = msg_send ~self ~cmd:(selector "setInputScleraProtectionThresholdIrisMedium:") ~typ:(id @-> returning void) x
let setInputScleraProtectionThresholdIrisSmall x self = msg_send ~self ~cmd:(selector "setInputScleraProtectionThresholdIrisSmall:") ~typ:(id @-> returning void) x
let setInputScleraProtectionThresholdScleraLarge x self = msg_send ~self ~cmd:(selector "setInputScleraProtectionThresholdScleraLarge:") ~typ:(id @-> returning void) x
let setInputScleraProtectionThresholdScleraMedium x self = msg_send ~self ~cmd:(selector "setInputScleraProtectionThresholdScleraMedium:") ~typ:(id @-> returning void) x
let setInputScleraProtectionThresholdScleraSmall x self = msg_send ~self ~cmd:(selector "setInputScleraProtectionThresholdScleraSmall:") ~typ:(id @-> returning void) x
let setInputScleraProtectionThresholdSkinLarge x self = msg_send ~self ~cmd:(selector "setInputScleraProtectionThresholdSkinLarge:") ~typ:(id @-> returning void) x
let setInputScleraProtectionThresholdSkinMedium x self = msg_send ~self ~cmd:(selector "setInputScleraProtectionThresholdSkinMedium:") ~typ:(id @-> returning void) x
let setInputScleraProtectionThresholdSkinSmall x self = msg_send ~self ~cmd:(selector "setInputScleraProtectionThresholdSkinSmall:") ~typ:(id @-> returning void) x
let setInputScleraThreshold x self = msg_send ~self ~cmd:(selector "setInputScleraThreshold:") ~typ:(id @-> returning void) x
let setInputSearchLong x self = msg_send ~self ~cmd:(selector "setInputSearchLong:") ~typ:(id @-> returning void) x
let setInputSearchShort x self = msg_send ~self ~cmd:(selector "setInputSearchShort:") ~typ:(id @-> returning void) x
let setInputSecondary x self = msg_send ~self ~cmd:(selector "setInputSecondary:") ~typ:(id @-> returning void) x
let setInputShowMask x self = msg_send ~self ~cmd:(selector "setInputShowMask:") ~typ:(id @-> returning void) x
let setInputSize x self = msg_send ~self ~cmd:(selector "setInputSize:") ~typ:(id @-> returning void) x
let setInputSkinMask x self = msg_send ~self ~cmd:(selector "setInputSkinMask:") ~typ:(id @-> returning void) x
let setInputSkinProtectionThresholdLarge x self = msg_send ~self ~cmd:(selector "setInputSkinProtectionThresholdLarge:") ~typ:(id @-> returning void) x
let setInputSkinProtectionThresholdMedium x self = msg_send ~self ~cmd:(selector "setInputSkinProtectionThresholdMedium:") ~typ:(id @-> returning void) x
let setInputSkinProtectionThresholdSmall x self = msg_send ~self ~cmd:(selector "setInputSkinProtectionThresholdSmall:") ~typ:(id @-> returning void) x
let setInputSkinThreshold x self = msg_send ~self ~cmd:(selector "setInputSkinThreshold:") ~typ:(id @-> returning void) x
let setInputSkinThresholdMed x self = msg_send ~self ~cmd:(selector "setInputSkinThresholdMed:") ~typ:(id @-> returning void) x
let setInputSpecArea x self = msg_send ~self ~cmd:(selector "setInputSpecArea:") ~typ:(id @-> returning void) x
let setInputSpecAreaScale x self = msg_send ~self ~cmd:(selector "setInputSpecAreaScale:") ~typ:(id @-> returning void) x
let setInputSpecIntensity x self = msg_send ~self ~cmd:(selector "setInputSpecIntensity:") ~typ:(id @-> returning void) x
let setInputSpecMax x self = msg_send ~self ~cmd:(selector "setInputSpecMax:") ~typ:(id @-> returning void) x
let setInputSpecMin x self = msg_send ~self ~cmd:(selector "setInputSpecMin:") ~typ:(id @-> returning void) x
let setInputSpecular x self = msg_send ~self ~cmd:(selector "setInputSpecular:") ~typ:(id @-> returning void) x
let setInputSpecularCutoff x self = msg_send ~self ~cmd:(selector "setInputSpecularCutoff:") ~typ:(id @-> returning void) x
let setInputSplat x self = msg_send ~self ~cmd:(selector "setInputSplat:") ~typ:(id @-> returning void) x
let setInputTargetClosing x self = msg_send ~self ~cmd:(selector "setInputTargetClosing:") ~typ:(id @-> returning void) x
let setInputUseFaceSegmentationMask x self = msg_send ~self ~cmd:(selector "setInputUseFaceSegmentationMask:") ~typ:(id @-> returning void) x
let setInputWhiteCutoff x self = msg_send ~self ~cmd:(selector "setInputWhiteCutoff:") ~typ:(id @-> returning void) x
let skinProtectionMaskWithThreshold x self = msg_send ~self ~cmd:(selector "skinProtectionMaskWithThreshold:") ~typ:(float @-> returning id) x