(* auto-generated, do not modify *)

[@@@ocaml.warning "-33"]
open Runtime
open Objc

open Foundation

let accessibilityIdentifier imp = Define.method_spec ~cmd:(selector "accessibilityIdentifier") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let accessibilityLargeTextDidChange imp = Define.method_spec ~cmd:(selector "accessibilityLargeTextDidChange") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let actionSheetPresentationController imp = Define.method_spec ~cmd:(selector "actionSheetPresentationController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let addChildViewController' imp = Define.method_spec ~cmd:(selector "addChildViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let addKeyCommand' imp = Define.method_spec ~cmd:(selector "addKeyCommand:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let additionalSafeAreaInsets imp = Define.method_spec ~cmd:(selector "additionalSafeAreaInsets") ~typ:(returning (UIEdgeInsets.t)) ~enc:"{UIEdgeInsets=dddd}16@0:8" imp
let afterAppearanceBlock imp = Define.method_spec ~cmd:(selector "afterAppearanceBlock") ~typ:(returning ((ptr void))) ~enc:"@?16@0:8" imp
let allowedChildViewControllersForUnwindingFromSource' imp = Define.method_spec ~cmd:(selector "allowedChildViewControllersForUnwindingFromSource:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let appearanceTransitionsAreDisabled imp = Define.method_spec ~cmd:(selector "appearanceTransitionsAreDisabled") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let applicationDidResume imp = Define.method_spec ~cmd:(selector "applicationDidResume") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let applicationFinishedRestoringState imp = Define.method_spec ~cmd:(selector "applicationFinishedRestoringState") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let applicationWantsViewsToDisappear imp = Define.method_spec ~cmd:(selector "applicationWantsViewsToDisappear") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let applicationWillSuspend imp = Define.method_spec ~cmd:(selector "applicationWillSuspend") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let attentionClassDumpUser'yesItsUsAgain'althoughSwizzlingAndOverridingPrivateMethodsIsFun'itWasntMuchFunWhenYourAppStoppedWorking'pleaseRefrainFromDoingSoInTheFutureOkayThanksBye' imp = Define.method_spec ~cmd:(selector "attentionClassDumpUser:yesItsUsAgain:althoughSwizzlingAndOverridingPrivateMethodsIsFun:itWasntMuchFunWhenYourAppStoppedWorking:pleaseRefrainFromDoingSoInTheFutureOkayThanksBye:") ~typ:(id @-> id @-> id @-> id @-> id @-> returning (void)) ~enc:"v56@0:8@16@24@32@40@48" imp
let automaticallyAdjustsScrollViewInsets imp = Define.method_spec ~cmd:(selector "automaticallyAdjustsScrollViewInsets") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers imp = Define.method_spec ~cmd:(selector "automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let autorelease imp = Define.method_spec ~cmd:(selector "autorelease") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let autoresizeArchivedView imp = Define.method_spec ~cmd:(selector "autoresizeArchivedView") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let autoresizesArchivedViewToFullSize imp = Define.method_spec ~cmd:(selector "autoresizesArchivedViewToFullSize") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let awakeFromNib imp = Define.method_spec ~cmd:(selector "awakeFromNib") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let beginAppearanceTransition'animated' imp = Define.method_spec ~cmd:(selector "beginAppearanceTransition:animated:") ~typ:(bool @-> bool @-> returning (void)) ~enc:"v24@0:8c16c20" imp
let beginRequestWithExtensionContext' imp = Define.method_spec ~cmd:(selector "beginRequestWithExtensionContext:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let bottomLayoutGuide imp = Define.method_spec ~cmd:(selector "bottomLayoutGuide") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let canHandleSnapbackIdentifier'animated' imp = Define.method_spec ~cmd:(selector "canHandleSnapbackIdentifier:animated:") ~typ:(id @-> bool @-> returning (bool)) ~enc:"c28@0:8@16c24" imp
let canPerformAction'withSender' imp = Define.method_spec ~cmd:(selector "canPerformAction:withSender:") ~typ:(_SEL @-> id @-> returning (bool)) ~enc:"c32@0:8:16@24" imp
let canPerformUnwindSegueAction'fromViewController'sender' imp = Define.method_spec ~cmd:(selector "canPerformUnwindSegueAction:fromViewController:sender:") ~typ:(_SEL @-> id @-> id @-> returning (bool)) ~enc:"c40@0:8:16@24@32" imp
let canPerformUnwindSegueAction'fromViewController'withSender' imp = Define.method_spec ~cmd:(selector "canPerformUnwindSegueAction:fromViewController:withSender:") ~typ:(_SEL @-> id @-> id @-> returning (bool)) ~enc:"c40@0:8:16@24@32" imp
let cancelBeginAppearanceTransition imp = Define.method_spec ~cmd:(selector "cancelBeginAppearanceTransition") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let childModalViewController imp = Define.method_spec ~cmd:(selector "childModalViewController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let childViewControllerContainingSegueSource' imp = Define.method_spec ~cmd:(selector "childViewControllerContainingSegueSource:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let childViewControllerForHomeIndicatorAutoHidden imp = Define.method_spec ~cmd:(selector "childViewControllerForHomeIndicatorAutoHidden") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let childViewControllerForPointerLock imp = Define.method_spec ~cmd:(selector "childViewControllerForPointerLock") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let childViewControllerForScreenEdgesDeferringSystemGestures imp = Define.method_spec ~cmd:(selector "childViewControllerForScreenEdgesDeferringSystemGestures") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let childViewControllerForStatusBarHidden imp = Define.method_spec ~cmd:(selector "childViewControllerForStatusBarHidden") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let childViewControllerForStatusBarStyle imp = Define.method_spec ~cmd:(selector "childViewControllerForStatusBarStyle") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let childViewControllerForTouchBar imp = Define.method_spec ~cmd:(selector "childViewControllerForTouchBar") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let childViewControllerForUserInterfaceStyle imp = Define.method_spec ~cmd:(selector "childViewControllerForUserInterfaceStyle") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let childViewControllerForWhitePointAdaptivityStyle imp = Define.method_spec ~cmd:(selector "childViewControllerForWhitePointAdaptivityStyle") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let childViewControllers imp = Define.method_spec ~cmd:(selector "childViewControllers") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let childViewControllersCount imp = Define.method_spec ~cmd:(selector "childViewControllersCount") ~typ:(returning (ullong)) ~enc:"Q16@0:8" imp
let collapseSecondaryViewController'forSplitViewController' imp = Define.method_spec ~cmd:(selector "collapseSecondaryViewController:forSplitViewController:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let containmentSupport imp = Define.method_spec ~cmd:(selector "containmentSupport") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let contentAlpha imp = Define.method_spec ~cmd:(selector "contentAlpha") ~typ:(returning (double)) ~enc:"d16@0:8" imp
let contentScrollView imp = Define.method_spec ~cmd:(selector "contentScrollView") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let contentScrollViewForEdge' imp = Define.method_spec ~cmd:(selector "contentScrollViewForEdge:") ~typ:(ullong @-> returning (id)) ~enc:"@24@0:8Q16" imp
let contentSizeForViewInPopover imp = Define.method_spec ~cmd:(selector "contentSizeForViewInPopover") ~typ:(returning (CGSize.t)) ~enc:"{CGSize=dd}16@0:8" imp
let contentSizeForViewInPopoverView imp = Define.method_spec ~cmd:(selector "contentSizeForViewInPopoverView") ~typ:(returning (CGSize.t)) ~enc:"{CGSize=dd}16@0:8" imp
let contentVisibility imp = Define.method_spec ~cmd:(selector "contentVisibility") ~typ:(returning (llong)) ~enc:"q16@0:8" imp
let currentAction imp = Define.method_spec ~cmd:(selector "currentAction") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let customNavigationInteractiveTransitionDuration imp = Define.method_spec ~cmd:(selector "customNavigationInteractiveTransitionDuration") ~typ:(returning (double)) ~enc:"d16@0:8" imp
let customNavigationInteractiveTransitionPercentComplete imp = Define.method_spec ~cmd:(selector "customNavigationInteractiveTransitionPercentComplete") ~typ:(returning (double)) ~enc:"d16@0:8" imp
let customTransitioningView imp = Define.method_spec ~cmd:(selector "customTransitioningView") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let dealloc imp = Define.method_spec ~cmd:(selector "dealloc") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let debugURLsForDiagnostics imp = Define.method_spec ~cmd:(selector "debugURLsForDiagnostics") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let defaultPNGName imp = Define.method_spec ~cmd:(selector "defaultPNGName") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let definesPresentationContext imp = Define.method_spec ~cmd:(selector "definesPresentationContext") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let didAnimateFirstHalfOfRotationToInterfaceOrientation' imp = Define.method_spec ~cmd:(selector "didAnimateFirstHalfOfRotationToInterfaceOrientation:") ~typ:(llong @-> returning (void)) ~enc:"v24@0:8q16" imp
let didMoveToParentViewController' imp = Define.method_spec ~cmd:(selector "didMoveToParentViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let didReceiveMemoryWarning imp = Define.method_spec ~cmd:(selector "didReceiveMemoryWarning") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let didRotateFromInterfaceOrientation' imp = Define.method_spec ~cmd:(selector "didRotateFromInterfaceOrientation:") ~typ:(llong @-> returning (void)) ~enc:"v24@0:8q16" imp
let didUpdateFocusInContext'withAnimationCoordinator' imp = Define.method_spec ~cmd:(selector "didUpdateFocusInContext:withAnimationCoordinator:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let disablesAutomaticKeyboardDismissal imp = Define.method_spec ~cmd:(selector "disablesAutomaticKeyboardDismissal") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let dismissModalViewControllerAnimated' imp = Define.method_spec ~cmd:(selector "dismissModalViewControllerAnimated:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let dismissModalViewControllerWithTransition' imp = Define.method_spec ~cmd:(selector "dismissModalViewControllerWithTransition:") ~typ:(int @-> returning (void)) ~enc:"v20@0:8i16" imp
let dismissMoviePlayerViewControllerAnimated imp = Define.method_spec ~cmd:(selector "dismissMoviePlayerViewControllerAnimated") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let dismissViewControllerAnimated'completion' imp = Define.method_spec ~cmd:(selector "dismissViewControllerAnimated:completion:") ~typ:(bool @-> (ptr void) @-> returning (void)) ~enc:"v28@0:8c16@?20" imp
let dismissViewControllerWithTransition'completion' imp = Define.method_spec ~cmd:(selector "dismissViewControllerWithTransition:completion:") ~typ:(int @-> (ptr void) @-> returning (void)) ~enc:"v28@0:8i16@?20" imp
let doc_appLocationLargeNavigationTitlesForLocation'configuration' imp = Define.method_spec ~cmd:(selector "doc_appLocationLargeNavigationTitlesForLocation:configuration:") ~typ:(id @-> id @-> returning (id)) ~enc:"@32@0:8@16@24" imp
let dropShadowView imp = Define.method_spec ~cmd:(selector "dropShadowView") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let durationForTransition' imp = Define.method_spec ~cmd:(selector "durationForTransition:") ~typ:(int @-> returning (double)) ~enc:"d20@0:8i16" imp
let edgesForExtendedLayout imp = Define.method_spec ~cmd:(selector "edgesForExtendedLayout") ~typ:(returning (ullong)) ~enc:"Q16@0:8" imp
let editButtonItem imp = Define.method_spec ~cmd:(selector "editButtonItem") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let encodeRestorableStateWithCoder' imp = Define.method_spec ~cmd:(selector "encodeRestorableStateWithCoder:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let encodeWithCoder' imp = Define.method_spec ~cmd:(selector "encodeWithCoder:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let endAppearanceTransition imp = Define.method_spec ~cmd:(selector "endAppearanceTransition") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let extendedLayoutIncludesOpaqueBars imp = Define.method_spec ~cmd:(selector "extendedLayoutIncludesOpaqueBars") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let extensionContext imp = Define.method_spec ~cmd:(selector "extensionContext") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let focusGroupIdentifier imp = Define.method_spec ~cmd:(selector "focusGroupIdentifier") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let focusItemContainer imp = Define.method_spec ~cmd:(selector "focusItemContainer") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let forceUnloadView imp = Define.method_spec ~cmd:(selector "forceUnloadView") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let formSheetSize imp = Define.method_spec ~cmd:(selector "formSheetSize") ~typ:(returning (CGSize.t)) ~enc:"{CGSize=dd}16@0:8" imp
let getRotationContentSettings'forWindow' imp = Define.method_spec ~cmd:(selector "getRotationContentSettings:forWindow:") ~typ:((ptr void) @-> id @-> returning (void)) ~enc:"v32@0:8^{?=cccccdi}16@24" imp
let hidesBottomBarWhenPushed imp = Define.method_spec ~cmd:(selector "hidesBottomBarWhenPushed") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let ignoresParentMargins imp = Define.method_spec ~cmd:(selector "ignoresParentMargins") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let inExplicitAppearanceTransition imp = Define.method_spec ~cmd:(selector "inExplicitAppearanceTransition") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let infoCardThemeChanged imp = Define.method_spec ~cmd:(selector "infoCardThemeChanged") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let init imp = Define.method_spec ~cmd:(selector "init") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let initWithCoder' imp = Define.method_spec ~cmd:(selector "initWithCoder:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let initWithNibName'bundle' imp = Define.method_spec ~cmd:(selector "initWithNibName:bundle:") ~typ:(id @-> id @-> returning (id)) ~enc:"@32@0:8@16@24" imp
let interfaceOrientation imp = Define.method_spec ~cmd:(selector "interfaceOrientation") ~typ:(returning (llong)) ~enc:"q16@0:8" imp
let invalidate imp = Define.method_spec ~cmd:(selector "invalidate") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let isBeingDismissed imp = Define.method_spec ~cmd:(selector "isBeingDismissed") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isBeingPresented imp = Define.method_spec ~cmd:(selector "isBeingPresented") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isEditing imp = Define.method_spec ~cmd:(selector "isEditing") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isFinishingModalTransition imp = Define.method_spec ~cmd:(selector "isFinishingModalTransition") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isInAnimatedVCTransition imp = Define.method_spec ~cmd:(selector "isInAnimatedVCTransition") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isInWillRotateCallback imp = Define.method_spec ~cmd:(selector "isInWillRotateCallback") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isModalInPopover imp = Define.method_spec ~cmd:(selector "isModalInPopover") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isModalInPresentation imp = Define.method_spec ~cmd:(selector "isModalInPresentation") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isMovingFromParentViewController imp = Define.method_spec ~cmd:(selector "isMovingFromParentViewController") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isMovingToParentViewController imp = Define.method_spec ~cmd:(selector "isMovingToParentViewController") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isPerformingModalTransition imp = Define.method_spec ~cmd:(selector "isPerformingModalTransition") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isSettingAppearState imp = Define.method_spec ~cmd:(selector "isSettingAppearState") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isSheet imp = Define.method_spec ~cmd:(selector "isSheet") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isUsingLegacyContainment imp = Define.method_spec ~cmd:(selector "isUsingLegacyContainment") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isViewControllerModallyPresented imp = Define.method_spec ~cmd:(selector "isViewControllerModallyPresented") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let isViewLoaded imp = Define.method_spec ~cmd:(selector "isViewLoaded") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let keyCommands imp = Define.method_spec ~cmd:(selector "keyCommands") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let leadingPreviewAction imp = Define.method_spec ~cmd:(selector "leadingPreviewAction") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let loadView imp = Define.method_spec ~cmd:(selector "loadView") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let loadViewIfNeeded imp = Define.method_spec ~cmd:(selector "loadViewIfNeeded") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let loadViewIfRequired imp = Define.method_spec ~cmd:(selector "loadViewIfRequired") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let mk_theme imp = Define.method_spec ~cmd:(selector "mk_theme") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let modalInPopover imp = Define.method_spec ~cmd:(selector "modalInPopover") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let modalPresentationCapturesStatusBarAppearance imp = Define.method_spec ~cmd:(selector "modalPresentationCapturesStatusBarAppearance") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let modalPresentationStyle imp = Define.method_spec ~cmd:(selector "modalPresentationStyle") ~typ:(returning (llong)) ~enc:"q16@0:8" imp
let modalTransitionStyle imp = Define.method_spec ~cmd:(selector "modalTransitionStyle") ~typ:(returning (llong)) ~enc:"q16@0:8" imp
let modalViewController imp = Define.method_spec ~cmd:(selector "modalViewController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let moreListImage imp = Define.method_spec ~cmd:(selector "moreListImage") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let moreListSelectedImage imp = Define.method_spec ~cmd:(selector "moreListSelectedImage") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let moreListTableCell imp = Define.method_spec ~cmd:(selector "moreListTableCell") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let mutableChildViewControllers imp = Define.method_spec ~cmd:(selector "mutableChildViewControllers") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let navigateToDestination'options'completionHandler' imp = Define.method_spec ~cmd:(selector "navigateToDestination:options:completionHandler:") ~typ:(id @-> ullong @-> (ptr void) @-> returning (void)) ~enc:"v40@0:8@16Q24@?32" imp
let navigationController imp = Define.method_spec ~cmd:(selector "navigationController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let navigationInsetAdjustment imp = Define.method_spec ~cmd:(selector "navigationInsetAdjustment") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let navigationItem imp = Define.method_spec ~cmd:(selector "navigationItem") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let needsDidMoveCleanup imp = Define.method_spec ~cmd:(selector "needsDidMoveCleanup") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let nextExistingParticipantOnRouteToDestination' imp = Define.method_spec ~cmd:(selector "nextExistingParticipantOnRouteToDestination:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let nextResponder imp = Define.method_spec ~cmd:(selector "nextResponder") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let nibBundle imp = Define.method_spec ~cmd:(selector "nibBundle") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let nibName imp = Define.method_spec ~cmd:(selector "nibName") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let ob_isFormSheet imp = Define.method_spec ~cmd:(selector "ob_isFormSheet") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let overrideTraitCollection imp = Define.method_spec ~cmd:(selector "overrideTraitCollection") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let overrideTraitCollectionForChildViewController' imp = Define.method_spec ~cmd:(selector "overrideTraitCollectionForChildViewController:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let overrideUserInterfaceStyle imp = Define.method_spec ~cmd:(selector "overrideUserInterfaceStyle") ~typ:(returning (llong)) ~enc:"q16@0:8" imp
let parentFocusEnvironment imp = Define.method_spec ~cmd:(selector "parentFocusEnvironment") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let parentModalViewController imp = Define.method_spec ~cmd:(selector "parentModalViewController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let parentViewController imp = Define.method_spec ~cmd:(selector "parentViewController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let performSegueWithIdentifier'sender' imp = Define.method_spec ~cmd:(selector "performSegueWithIdentifier:sender:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let performsActionsWhilePresentingModally imp = Define.method_spec ~cmd:(selector "performsActionsWhilePresentingModally") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let popoverPresentationController imp = Define.method_spec ~cmd:(selector "popoverPresentationController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let popoverPresentationController' imp = Define.method_spec ~cmd:(selector "popoverPresentationController:") ~typ:(bool @-> returning (id)) ~enc:"@20@0:8c16" imp
let ppt_performBlockAfterNextNavigationAnimation' imp = Define.method_spec ~cmd:(selector "ppt_performBlockAfterNextNavigationAnimation:") ~typ:((ptr void) @-> returning (void)) ~enc:"v24@0:8@?16" imp
let preferredContentSize imp = Define.method_spec ~cmd:(selector "preferredContentSize") ~typ:(returning (CGSize.t)) ~enc:"{CGSize=dd}16@0:8" imp
let preferredContentSizeDidChangeForChildContentContainer' imp = Define.method_spec ~cmd:(selector "preferredContentSizeDidChangeForChildContentContainer:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let preferredFocusEnvironments imp = Define.method_spec ~cmd:(selector "preferredFocusEnvironments") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let preferredFocusedItem imp = Define.method_spec ~cmd:(selector "preferredFocusedItem") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let preferredFocusedView imp = Define.method_spec ~cmd:(selector "preferredFocusedView") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let preferredInterfaceOrientationForPresentation imp = Define.method_spec ~cmd:(selector "preferredInterfaceOrientationForPresentation") ~typ:(returning (llong)) ~enc:"q16@0:8" imp
let preferredScreenEdgesDeferringSystemGestures imp = Define.method_spec ~cmd:(selector "preferredScreenEdgesDeferringSystemGestures") ~typ:(returning (ullong)) ~enc:"Q16@0:8" imp
let preferredStatusBarStyle imp = Define.method_spec ~cmd:(selector "preferredStatusBarStyle") ~typ:(returning (llong)) ~enc:"q16@0:8" imp
let preferredStatusBarUpdateAnimation imp = Define.method_spec ~cmd:(selector "preferredStatusBarUpdateAnimation") ~typ:(returning (llong)) ~enc:"q16@0:8" imp
let preferredUserInterfaceStyle imp = Define.method_spec ~cmd:(selector "preferredUserInterfaceStyle") ~typ:(returning (llong)) ~enc:"q16@0:8" imp
let preferredWhitePointAdaptivityStyle imp = Define.method_spec ~cmd:(selector "preferredWhitePointAdaptivityStyle") ~typ:(returning (llong)) ~enc:"q16@0:8" imp
let prefersHomeIndicatorAutoHidden imp = Define.method_spec ~cmd:(selector "prefersHomeIndicatorAutoHidden") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let prefersPointerLocked imp = Define.method_spec ~cmd:(selector "prefersPointerLocked") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let prefersStatusBarHidden imp = Define.method_spec ~cmd:(selector "prefersStatusBarHidden") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let prepareForSegue'sender' imp = Define.method_spec ~cmd:(selector "prepareForSegue:sender:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let presentModalViewController'animated' imp = Define.method_spec ~cmd:(selector "presentModalViewController:animated:") ~typ:(id @-> bool @-> returning (void)) ~enc:"v28@0:8@16c24" imp
let presentModalViewController'withTransition' imp = Define.method_spec ~cmd:(selector "presentModalViewController:withTransition:") ~typ:(id @-> int @-> returning (void)) ~enc:"v28@0:8@16i24" imp
let presentMoviePlayerViewControllerAnimated' imp = Define.method_spec ~cmd:(selector "presentMoviePlayerViewControllerAnimated:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let presentViewController'animated'completion' imp = Define.method_spec ~cmd:(selector "presentViewController:animated:completion:") ~typ:(id @-> bool @-> (ptr void) @-> returning (void)) ~enc:"v36@0:8@16c24@?28" imp
let presentViewController'withTransition'completion' imp = Define.method_spec ~cmd:(selector "presentViewController:withTransition:completion:") ~typ:(id @-> int @-> (ptr void) @-> returning (void)) ~enc:"v36@0:8@16i24@?28" imp
let presentationController imp = Define.method_spec ~cmd:(selector "presentationController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let presentedViewController imp = Define.method_spec ~cmd:(selector "presentedViewController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let presentingViewController imp = Define.method_spec ~cmd:(selector "presentingViewController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let previewActionItems imp = Define.method_spec ~cmd:(selector "previewActionItems") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let previewActions imp = Define.method_spec ~cmd:(selector "previewActions") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let previewMenuItems imp = Define.method_spec ~cmd:(selector "previewMenuItems") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let provideViewControllersForDestination'options'completionHandler' imp = Define.method_spec ~cmd:(selector "provideViewControllersForDestination:options:completionHandler:") ~typ:(id @-> ullong @-> (ptr void) @-> returning (void)) ~enc:"v40@0:8@16Q24@?32" imp
let providesPresentationContextTransitionStyle imp = Define.method_spec ~cmd:(selector "providesPresentationContextTransitionStyle") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let registerForPreviewingWithDelegate'sourceView' imp = Define.method_spec ~cmd:(selector "registerForPreviewingWithDelegate:sourceView:") ~typ:(id @-> id @-> returning (id)) ~enc:"@32@0:8@16@24" imp
let registerPreviewSourceView'previewingDelegate' imp = Define.method_spec ~cmd:(selector "registerPreviewSourceView:previewingDelegate:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let release imp = Define.method_spec ~cmd:(selector "release") ~typ:(returning (void)) ~enc:"Vv16@0:8" imp
let removeChildViewController' imp = Define.method_spec ~cmd:(selector "removeChildViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let removeChildViewController'notifyDidMove' imp = Define.method_spec ~cmd:(selector "removeChildViewController:notifyDidMove:") ~typ:(id @-> bool @-> returning (void)) ~enc:"v28@0:8@16c24" imp
let removeFromParentViewController imp = Define.method_spec ~cmd:(selector "removeFromParentViewController") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let removeKeyCommand' imp = Define.method_spec ~cmd:(selector "removeKeyCommand:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let restorationClass imp = Define.method_spec ~cmd:(selector "restorationClass") ~typ:(returning (_Class)) ~enc:"#16@0:8" imp
let restoreUserActivityState' imp = Define.method_spec ~cmd:(selector "restoreUserActivityState:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let restoresFocusAfterTransition imp = Define.method_spec ~cmd:(selector "restoresFocusAfterTransition") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let retain imp = Define.method_spec ~cmd:(selector "retain") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let retainCount imp = Define.method_spec ~cmd:(selector "retainCount") ~typ:(returning (ullong)) ~enc:"Q16@0:8" imp
let rotatingContentViewForWindow' imp = Define.method_spec ~cmd:(selector "rotatingContentViewForWindow:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let rotatingFooterView imp = Define.method_spec ~cmd:(selector "rotatingFooterView") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let rotatingFooterViewForWindow' imp = Define.method_spec ~cmd:(selector "rotatingFooterViewForWindow:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let rotatingHeaderView imp = Define.method_spec ~cmd:(selector "rotatingHeaderView") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let rotatingHeaderViewForWindow' imp = Define.method_spec ~cmd:(selector "rotatingHeaderViewForWindow:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let rotatingSnapshotViewForWindow' imp = Define.method_spec ~cmd:(selector "rotatingSnapshotViewForWindow:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let routingOptionsForDestination' imp = Define.method_spec ~cmd:(selector "routingOptionsForDestination:") ~typ:(id @-> returning (ullong)) ~enc:"Q24@0:8@16" imp
let safeAreaLayoutGuide imp = Define.method_spec ~cmd:(selector "safeAreaLayoutGuide") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let savedHeaderSuperview imp = Define.method_spec ~cmd:(selector "savedHeaderSuperview") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let searchBarHidNavBar imp = Define.method_spec ~cmd:(selector "searchBarHidNavBar") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let searchDisplayController imp = Define.method_spec ~cmd:(selector "searchDisplayController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let segueForUnwindingToViewController'fromViewController'identifier' imp = Define.method_spec ~cmd:(selector "segueForUnwindingToViewController:fromViewController:identifier:") ~typ:(id @-> id @-> id @-> returning (id)) ~enc:"@40@0:8@16@24@32" imp
let separateSecondaryViewControllerForSplitViewController' imp = Define.method_spec ~cmd:(selector "separateSecondaryViewControllerForSplitViewController:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let setAccessibilityIdentifier' imp = Define.method_spec ~cmd:(selector "setAccessibilityIdentifier:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setAdditionalSafeAreaInsets' imp = Define.method_spec ~cmd:(selector "setAdditionalSafeAreaInsets:") ~typ:(UIEdgeInsets.t @-> returning (void)) ~enc:"v48@0:8{UIEdgeInsets=dddd}16" imp
let setAfterAppearanceBlock' imp = Define.method_spec ~cmd:(selector "setAfterAppearanceBlock:") ~typ:((ptr void) @-> returning (void)) ~enc:"v24@0:8@?16" imp
let setAppearanceTransitionsAreDisabled' imp = Define.method_spec ~cmd:(selector "setAppearanceTransitionsAreDisabled:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setAutomaticallyAdjustsScrollViewInsets' imp = Define.method_spec ~cmd:(selector "setAutomaticallyAdjustsScrollViewInsets:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setAutoresizesArchivedViewToFullSize' imp = Define.method_spec ~cmd:(selector "setAutoresizesArchivedViewToFullSize:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setChildModalViewController' imp = Define.method_spec ~cmd:(selector "setChildModalViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setContainmentSupport' imp = Define.method_spec ~cmd:(selector "setContainmentSupport:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setContentAlpha' imp = Define.method_spec ~cmd:(selector "setContentAlpha:") ~typ:(double @-> returning (void)) ~enc:"v24@0:8d16" imp
let setContentScrollView'forEdge' imp = Define.method_spec ~cmd:(selector "setContentScrollView:forEdge:") ~typ:(id @-> ullong @-> returning (void)) ~enc:"v32@0:8@16Q24" imp
let setContentSizeForViewInPopover' imp = Define.method_spec ~cmd:(selector "setContentSizeForViewInPopover:") ~typ:(CGSize.t @-> returning (void)) ~enc:"v32@0:8{CGSize=dd}16" imp
let setContentVisibility' imp = Define.method_spec ~cmd:(selector "setContentVisibility:") ~typ:(llong @-> returning (void)) ~enc:"v24@0:8q16" imp
let setCustomNavigationInteractiveTransitionDuration' imp = Define.method_spec ~cmd:(selector "setCustomNavigationInteractiveTransitionDuration:") ~typ:(double @-> returning (void)) ~enc:"v24@0:8d16" imp
let setCustomNavigationInteractiveTransitionPercentComplete' imp = Define.method_spec ~cmd:(selector "setCustomNavigationInteractiveTransitionPercentComplete:") ~typ:(double @-> returning (void)) ~enc:"v24@0:8d16" imp
let setCustomTransitioningView' imp = Define.method_spec ~cmd:(selector "setCustomTransitioningView:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setDefinesPresentationContext' imp = Define.method_spec ~cmd:(selector "setDefinesPresentationContext:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setDisablesAutomaticKeyboardDismissal' imp = Define.method_spec ~cmd:(selector "setDisablesAutomaticKeyboardDismissal:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setDropShadowView' imp = Define.method_spec ~cmd:(selector "setDropShadowView:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setEdgesForExtendedLayout' imp = Define.method_spec ~cmd:(selector "setEdgesForExtendedLayout:") ~typ:(ullong @-> returning (void)) ~enc:"v24@0:8Q16" imp
let setEditing' imp = Define.method_spec ~cmd:(selector "setEditing:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setEditing'animated' imp = Define.method_spec ~cmd:(selector "setEditing:animated:") ~typ:(bool @-> bool @-> returning (void)) ~enc:"v24@0:8c16c20" imp
let setExtendedLayoutIncludesOpaqueBars' imp = Define.method_spec ~cmd:(selector "setExtendedLayoutIncludesOpaqueBars:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setFinishingModalTransition' imp = Define.method_spec ~cmd:(selector "setFinishingModalTransition:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setFocusGroupIdentifier' imp = Define.method_spec ~cmd:(selector "setFocusGroupIdentifier:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setFormSheetSize' imp = Define.method_spec ~cmd:(selector "setFormSheetSize:") ~typ:(CGSize.t @-> returning (void)) ~enc:"v32@0:8{CGSize=dd}16" imp
let setHidesBottomBarWhenPushed' imp = Define.method_spec ~cmd:(selector "setHidesBottomBarWhenPushed:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setIgnoresParentMargins' imp = Define.method_spec ~cmd:(selector "setIgnoresParentMargins:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setInAnimatedVCTransition' imp = Define.method_spec ~cmd:(selector "setInAnimatedVCTransition:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setInWillRotateCallback' imp = Define.method_spec ~cmd:(selector "setInWillRotateCallback:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setInterfaceOrientation' imp = Define.method_spec ~cmd:(selector "setInterfaceOrientation:") ~typ:(llong @-> returning (void)) ~enc:"v24@0:8q16" imp
let setIsSheet' imp = Define.method_spec ~cmd:(selector "setIsSheet:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setModalInPopover' imp = Define.method_spec ~cmd:(selector "setModalInPopover:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setModalInPresentation' imp = Define.method_spec ~cmd:(selector "setModalInPresentation:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setModalPresentationCapturesStatusBarAppearance' imp = Define.method_spec ~cmd:(selector "setModalPresentationCapturesStatusBarAppearance:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setModalPresentationStyle' imp = Define.method_spec ~cmd:(selector "setModalPresentationStyle:") ~typ:(llong @-> returning (void)) ~enc:"v24@0:8q16" imp
let setModalTransitionStyle' imp = Define.method_spec ~cmd:(selector "setModalTransitionStyle:") ~typ:(llong @-> returning (void)) ~enc:"v24@0:8q16" imp
let setMutableChildViewControllers' imp = Define.method_spec ~cmd:(selector "setMutableChildViewControllers:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setNavigationInsetAdjustment' imp = Define.method_spec ~cmd:(selector "setNavigationInsetAdjustment:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setNeedsDidMoveCleanup' imp = Define.method_spec ~cmd:(selector "setNeedsDidMoveCleanup:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setNeedsFocusUpdate imp = Define.method_spec ~cmd:(selector "setNeedsFocusUpdate") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let setNeedsStatusBarAppearanceUpdate imp = Define.method_spec ~cmd:(selector "setNeedsStatusBarAppearanceUpdate") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let setNeedsTouchBarUpdate imp = Define.method_spec ~cmd:(selector "setNeedsTouchBarUpdate") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let setNeedsUpdateOfHomeIndicatorAutoHidden imp = Define.method_spec ~cmd:(selector "setNeedsUpdateOfHomeIndicatorAutoHidden") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let setNeedsUpdateOfPrefersPointerLocked imp = Define.method_spec ~cmd:(selector "setNeedsUpdateOfPrefersPointerLocked") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let setNeedsUpdateOfScreenEdgesDeferringSystemGestures imp = Define.method_spec ~cmd:(selector "setNeedsUpdateOfScreenEdgesDeferringSystemGestures") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let setNeedsUserInterfaceAppearanceUpdate imp = Define.method_spec ~cmd:(selector "setNeedsUserInterfaceAppearanceUpdate") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let setNeedsWhitePointAdaptivityStyleUpdate imp = Define.method_spec ~cmd:(selector "setNeedsWhitePointAdaptivityStyleUpdate") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let setNibBundle' imp = Define.method_spec ~cmd:(selector "setNibBundle:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setNibName' imp = Define.method_spec ~cmd:(selector "setNibName:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setOverrideTraitCollection' imp = Define.method_spec ~cmd:(selector "setOverrideTraitCollection:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setOverrideTraitCollection'forChildViewController' imp = Define.method_spec ~cmd:(selector "setOverrideTraitCollection:forChildViewController:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let setOverrideUserInterfaceStyle' imp = Define.method_spec ~cmd:(selector "setOverrideUserInterfaceStyle:") ~typ:(llong @-> returning (void)) ~enc:"v24@0:8q16" imp
let setParentModalViewController' imp = Define.method_spec ~cmd:(selector "setParentModalViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setParentViewController' imp = Define.method_spec ~cmd:(selector "setParentViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setPerformingModalTransition' imp = Define.method_spec ~cmd:(selector "setPerformingModalTransition:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setPreferredContentSize' imp = Define.method_spec ~cmd:(selector "setPreferredContentSize:") ~typ:(CGSize.t @-> returning (void)) ~enc:"v32@0:8{CGSize=dd}16" imp
let setPreferredFocusedItem' imp = Define.method_spec ~cmd:(selector "setPreferredFocusedItem:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setPreferredFocusedView' imp = Define.method_spec ~cmd:(selector "setPreferredFocusedView:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setPreferredUserInterfaceStyle' imp = Define.method_spec ~cmd:(selector "setPreferredUserInterfaceStyle:") ~typ:(llong @-> returning (void)) ~enc:"v24@0:8q16" imp
let setProvidesPresentationContextTransitionStyle' imp = Define.method_spec ~cmd:(selector "setProvidesPresentationContextTransitionStyle:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setRestorationClass' imp = Define.method_spec ~cmd:(selector "setRestorationClass:") ~typ:(_Class @-> returning (void)) ~enc:"v24@0:8#16" imp
let setRestoresFocusAfterTransition' imp = Define.method_spec ~cmd:(selector "setRestoresFocusAfterTransition:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setSearchBarHidNavBar' imp = Define.method_spec ~cmd:(selector "setSearchBarHidNavBar:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setSearchDisplayController' imp = Define.method_spec ~cmd:(selector "setSearchDisplayController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setShouldForceNonAnimatedTransition' imp = Define.method_spec ~cmd:(selector "setShouldForceNonAnimatedTransition:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setStoryboardIdentifier' imp = Define.method_spec ~cmd:(selector "setStoryboardIdentifier:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setTabBarItem' imp = Define.method_spec ~cmd:(selector "setTabBarItem:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setTitle' imp = Define.method_spec ~cmd:(selector "setTitle:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setToolbarItems' imp = Define.method_spec ~cmd:(selector "setToolbarItems:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setToolbarItems'animated' imp = Define.method_spec ~cmd:(selector "setToolbarItems:animated:") ~typ:(id @-> bool @-> returning (void)) ~enc:"v28@0:8@16c24" imp
let setTransitioningDelegate' imp = Define.method_spec ~cmd:(selector "setTransitioningDelegate:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setUseLegacyContainment' imp = Define.method_spec ~cmd:(selector "setUseLegacyContainment:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setUserActivity' imp = Define.method_spec ~cmd:(selector "setUserActivity:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setValue'forKey' imp = Define.method_spec ~cmd:(selector "setValue:forKey:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let setView' imp = Define.method_spec ~cmd:(selector "setView:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let setViewRespectsSystemMinimumLayoutMargins' imp = Define.method_spec ~cmd:(selector "setViewRespectsSystemMinimumLayoutMargins:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let setWantsFullScreenLayout' imp = Define.method_spec ~cmd:(selector "setWantsFullScreenLayout:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let set_cardViewControllerTransitioning' imp = Define.method_spec ~cmd:(selector "set_cardViewControllerTransitioning:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let set_departingParentViewController' imp = Define.method_spec ~cmd:(selector "set_departingParentViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let set_nextResponderIgnoresChildModalVC' imp = Define.method_spec ~cmd:(selector "set_nextResponderIgnoresChildModalVC:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let set_nextResponderIgnoresOverride' imp = Define.method_spec ~cmd:(selector "set_nextResponderIgnoresOverride:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let sheetPresentationController imp = Define.method_spec ~cmd:(selector "sheetPresentationController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let shouldAutomaticallyForwardAppearanceMethods imp = Define.method_spec ~cmd:(selector "shouldAutomaticallyForwardAppearanceMethods") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let shouldAutomaticallyForwardRotationMethods imp = Define.method_spec ~cmd:(selector "shouldAutomaticallyForwardRotationMethods") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let shouldAutorotate imp = Define.method_spec ~cmd:(selector "shouldAutorotate") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let shouldAutorotateToInterfaceOrientation' imp = Define.method_spec ~cmd:(selector "shouldAutorotateToInterfaceOrientation:") ~typ:(llong @-> returning (bool)) ~enc:"c24@0:8q16" imp
let shouldPerformSegueWithIdentifier'sender' imp = Define.method_spec ~cmd:(selector "shouldPerformSegueWithIdentifier:sender:") ~typ:(id @-> id @-> returning (bool)) ~enc:"c32@0:8@16@24" imp
let shouldUpdateFocusInContext' imp = Define.method_spec ~cmd:(selector "shouldUpdateFocusInContext:") ~typ:(id @-> returning (bool)) ~enc:"c24@0:8@16" imp
let shouldWindowUseOnePartInterfaceRotationAnimation' imp = Define.method_spec ~cmd:(selector "shouldWindowUseOnePartInterfaceRotationAnimation:") ~typ:(id @-> returning (bool)) ~enc:"c24@0:8@16" imp
let showDetailViewController'sender' imp = Define.method_spec ~cmd:(selector "showDetailViewController:sender:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let showViewController'sender' imp = Define.method_spec ~cmd:(selector "showViewController:sender:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let sizeForChildContentContainer'withParentContainerSize' imp = Define.method_spec ~cmd:(selector "sizeForChildContentContainer:withParentContainerSize:") ~typ:(id @-> CGSize.t @-> returning (CGSize.t)) ~enc:"{CGSize=dd}40@0:8@16{CGSize=dd}24" imp
let splitViewController imp = Define.method_spec ~cmd:(selector "splitViewController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let storyboard imp = Define.method_spec ~cmd:(selector "storyboard") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let storyboardCommitSegueTemplates imp = Define.method_spec ~cmd:(selector "storyboardCommitSegueTemplates") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let storyboardIdentifier imp = Define.method_spec ~cmd:(selector "storyboardIdentifier") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let storyboardPreviewSegueTemplates imp = Define.method_spec ~cmd:(selector "storyboardPreviewSegueTemplates") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let storyboardPreviewingRegistrants imp = Define.method_spec ~cmd:(selector "storyboardPreviewingRegistrants") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let storyboardSegueTemplates imp = Define.method_spec ~cmd:(selector "storyboardSegueTemplates") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let supportedInterfaceOrientations imp = Define.method_spec ~cmd:(selector "supportedInterfaceOrientations") ~typ:(returning (ullong)) ~enc:"Q16@0:8" imp
let systemLayoutFittingSizeDidChangeForChildContentContainer' imp = Define.method_spec ~cmd:(selector "systemLayoutFittingSizeDidChangeForChildContentContainer:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let systemLayoutFittingSizeDidChangeForChildViewController' imp = Define.method_spec ~cmd:(selector "systemLayoutFittingSizeDidChangeForChildViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let systemMinimumLayoutMargins imp = Define.method_spec ~cmd:(selector "systemMinimumLayoutMargins") ~typ:(returning (NSDirectionalEdgeInsets.t)) ~enc:"{NSDirectionalEdgeInsets=dddd}16@0:8" imp
let tabBarController imp = Define.method_spec ~cmd:(selector "tabBarController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let tabBarItem imp = Define.method_spec ~cmd:(selector "tabBarItem") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let targetViewControllerForAction'sender' imp = Define.method_spec ~cmd:(selector "targetViewControllerForAction:sender:") ~typ:(_SEL @-> id @-> returning (id)) ~enc:"@32@0:8:16@24" imp
let title imp = Define.method_spec ~cmd:(selector "title") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let toolbarItems imp = Define.method_spec ~cmd:(selector "toolbarItems") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let topLayoutGuide imp = Define.method_spec ~cmd:(selector "topLayoutGuide") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let trailingPreviewAction imp = Define.method_spec ~cmd:(selector "trailingPreviewAction") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let traitCollection imp = Define.method_spec ~cmd:(selector "traitCollection") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let traitCollectionDidChange' imp = Define.method_spec ~cmd:(selector "traitCollectionDidChange:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let traitCollectionForChildViewController' imp = Define.method_spec ~cmd:(selector "traitCollectionForChildViewController:") ~typ:(id @-> returning (id)) ~enc:"@24@0:8@16" imp
let tranformForScreenOriginRotation' imp = Define.method_spec ~cmd:(selector "tranformForScreenOriginRotation:") ~typ:(float @-> returning (CGAffineTransform.t)) ~enc:"{CGAffineTransform=dddddd}20@0:8f16" imp
let transitionCoordinator imp = Define.method_spec ~cmd:(selector "transitionCoordinator") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let transitionFromViewController'toViewController'duration'options'animations'completion' imp = Define.method_spec ~cmd:(selector "transitionFromViewController:toViewController:duration:options:animations:completion:") ~typ:(id @-> id @-> double @-> ullong @-> (ptr void) @-> (ptr void) @-> returning (void)) ~enc:"v64@0:8@16@24d32Q40@?48@?56" imp
let transitionViewShouldUseViewControllerCallbacks imp = Define.method_spec ~cmd:(selector "transitionViewShouldUseViewControllerCallbacks") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let transitioningDelegate imp = Define.method_spec ~cmd:(selector "transitioningDelegate") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let uiipc_filterForMediaTypes' imp = Define.method_spec ~cmd:(selector "uiipc_filterForMediaTypes:") ~typ:(id @-> returning (int)) ~enc:"i24@0:8@16" imp
let uiipc_imagePickerController imp = Define.method_spec ~cmd:(selector "uiipc_imagePickerController") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let uiipc_imagePickerOptions imp = Define.method_spec ~cmd:(selector "uiipc_imagePickerOptions") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let uiipc_useTelephonyUI imp = Define.method_spec ~cmd:(selector "uiipc_useTelephonyUI") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let unloadView imp = Define.method_spec ~cmd:(selector "unloadView") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let unloadViewForced' imp = Define.method_spec ~cmd:(selector "unloadViewForced:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let unloadViewIfReloadable imp = Define.method_spec ~cmd:(selector "unloadViewIfReloadable") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let unregisterForPreviewingWithContext' imp = Define.method_spec ~cmd:(selector "unregisterForPreviewingWithContext:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let unregisterPreviewSourceView' imp = Define.method_spec ~cmd:(selector "unregisterPreviewSourceView:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let unregisterPreviewing' imp = Define.method_spec ~cmd:(selector "unregisterPreviewing:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let unwindForSegue'towardsViewController' imp = Define.method_spec ~cmd:(selector "unwindForSegue:towardsViewController:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let updateFocusIfNeeded imp = Define.method_spec ~cmd:(selector "updateFocusIfNeeded") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let updateTabBarItemForViewController' imp = Define.method_spec ~cmd:(selector "updateTabBarItemForViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let updateTitleForViewController' imp = Define.method_spec ~cmd:(selector "updateTitleForViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let updateUserActivityState' imp = Define.method_spec ~cmd:(selector "updateUserActivityState:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let updateViewConstraints imp = Define.method_spec ~cmd:(selector "updateViewConstraints") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let useLayoutToLayoutNavigationTransitions imp = Define.method_spec ~cmd:(selector "useLayoutToLayoutNavigationTransitions") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let view imp = Define.method_spec ~cmd:(selector "view") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let viewControllerForRotation imp = Define.method_spec ~cmd:(selector "viewControllerForRotation") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let viewControllerForUnwindSegueAction'fromViewController'withSender' imp = Define.method_spec ~cmd:(selector "viewControllerForUnwindSegueAction:fromViewController:withSender:") ~typ:(_SEL @-> id @-> id @-> returning (id)) ~enc:"@40@0:8:16@24@32" imp
let viewDidAppear' imp = Define.method_spec ~cmd:(selector "viewDidAppear:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let viewDidDisappear' imp = Define.method_spec ~cmd:(selector "viewDidDisappear:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let viewDidLayoutSubviews imp = Define.method_spec ~cmd:(selector "viewDidLayoutSubviews") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let viewDidLoad imp = Define.method_spec ~cmd:(selector "viewDidLoad") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let viewDidMoveToWindow'shouldAppearOrDisappear' imp = Define.method_spec ~cmd:(selector "viewDidMoveToWindow:shouldAppearOrDisappear:") ~typ:(id @-> bool @-> returning (void)) ~enc:"v28@0:8@16c24" imp
let viewDidUnload imp = Define.method_spec ~cmd:(selector "viewDidUnload") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let viewIfLoaded imp = Define.method_spec ~cmd:(selector "viewIfLoaded") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let viewIsAppearing' imp = Define.method_spec ~cmd:(selector "viewIsAppearing:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let viewLayoutMarginsDidChange imp = Define.method_spec ~cmd:(selector "viewLayoutMarginsDidChange") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let viewRespectsSystemMinimumLayoutMargins imp = Define.method_spec ~cmd:(selector "viewRespectsSystemMinimumLayoutMargins") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let viewSafeAreaInsetsDidChange imp = Define.method_spec ~cmd:(selector "viewSafeAreaInsetsDidChange") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let viewWillAppear' imp = Define.method_spec ~cmd:(selector "viewWillAppear:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let viewWillDisappear' imp = Define.method_spec ~cmd:(selector "viewWillDisappear:") ~typ:(bool @-> returning (void)) ~enc:"v20@0:8c16" imp
let viewWillLayoutSubviews imp = Define.method_spec ~cmd:(selector "viewWillLayoutSubviews") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let viewWillMoveToWindow' imp = Define.method_spec ~cmd:(selector "viewWillMoveToWindow:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let viewWillTransitionToSize'withTransitionCoordinator' imp = Define.method_spec ~cmd:(selector "viewWillTransitionToSize:withTransitionCoordinator:") ~typ:(CGSize.t @-> id @-> returning (void)) ~enc:"v40@0:8{CGSize=dd}16@32" imp
let viewWillUnload imp = Define.method_spec ~cmd:(selector "viewWillUnload") ~typ:(returning (void)) ~enc:"v16@0:8" imp
let vk_viewIfLoaded imp = Define.method_spec ~cmd:(selector "vk_viewIfLoaded") ~typ:(returning (id)) ~enc:"@16@0:8" imp
let wantsFullScreenLayout imp = Define.method_spec ~cmd:(selector "wantsFullScreenLayout") ~typ:(returning (bool)) ~enc:"c16@0:8" imp
let willAnimateFirstHalfOfRotationToInterfaceOrientation'duration' imp = Define.method_spec ~cmd:(selector "willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:") ~typ:(llong @-> double @-> returning (void)) ~enc:"v32@0:8q16d24" imp
let willAnimateRotationToInterfaceOrientation'duration' imp = Define.method_spec ~cmd:(selector "willAnimateRotationToInterfaceOrientation:duration:") ~typ:(llong @-> double @-> returning (void)) ~enc:"v32@0:8q16d24" imp
let willAnimateSecondHalfOfRotationFromInterfaceOrientation'duration' imp = Define.method_spec ~cmd:(selector "willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:") ~typ:(llong @-> double @-> returning (void)) ~enc:"v32@0:8q16d24" imp
let willMoveToParentViewController' imp = Define.method_spec ~cmd:(selector "willMoveToParentViewController:") ~typ:(id @-> returning (void)) ~enc:"v24@0:8@16" imp
let willRotateToInterfaceOrientation'duration' imp = Define.method_spec ~cmd:(selector "willRotateToInterfaceOrientation:duration:") ~typ:(llong @-> double @-> returning (void)) ~enc:"v32@0:8q16d24" imp
let willTransitionToTraitCollection'withTransitionCoordinator' imp = Define.method_spec ~cmd:(selector "willTransitionToTraitCollection:withTransitionCoordinator:") ~typ:(id @-> id @-> returning (void)) ~enc:"v32@0:8@16@24" imp
let window'didAnimateFirstHalfOfRotationToInterfaceOrientation' imp = Define.method_spec ~cmd:(selector "window:didAnimateFirstHalfOfRotationToInterfaceOrientation:") ~typ:(id @-> llong @-> returning (void)) ~enc:"v32@0:8@16q24" imp
let window'didRotateFromInterfaceOrientation' imp = Define.method_spec ~cmd:(selector "window:didRotateFromInterfaceOrientation:") ~typ:(id @-> llong @-> returning (void)) ~enc:"v32@0:8@16q24" imp
let window'didRotateFromInterfaceOrientation'oldSize' imp = Define.method_spec ~cmd:(selector "window:didRotateFromInterfaceOrientation:oldSize:") ~typ:(id @-> llong @-> CGSize.t @-> returning (void)) ~enc:"v48@0:8@16q24{CGSize=dd}32" imp
let window'resizeFromOrientation' imp = Define.method_spec ~cmd:(selector "window:resizeFromOrientation:") ~typ:(id @-> llong @-> returning (void)) ~enc:"v32@0:8@16q24" imp
let window'setupWithInterfaceOrientation' imp = Define.method_spec ~cmd:(selector "window:setupWithInterfaceOrientation:") ~typ:(id @-> llong @-> returning (void)) ~enc:"v32@0:8@16q24" imp
let window'statusBarWillChangeFromHeight'toHeight' imp = Define.method_spec ~cmd:(selector "window:statusBarWillChangeFromHeight:toHeight:") ~typ:(id @-> double @-> double @-> returning (void)) ~enc:"v40@0:8@16d24d32" imp
let window'statusBarWillChangeFromHeight'toHeight'windowSizedViewController' imp = Define.method_spec ~cmd:(selector "window:statusBarWillChangeFromHeight:toHeight:windowSizedViewController:") ~typ:(id @-> double @-> double @-> id @-> returning (void)) ~enc:"v48@0:8@16d24d32@40" imp
let window'willAnimateFirstHalfOfRotationToInterfaceOrientation'duration' imp = Define.method_spec ~cmd:(selector "window:willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:") ~typ:(id @-> llong @-> double @-> returning (void)) ~enc:"v40@0:8@16q24d32" imp
let window'willAnimateFromContentFrame'toContentFrame' imp = Define.method_spec ~cmd:(selector "window:willAnimateFromContentFrame:toContentFrame:") ~typ:(id @-> CGRect.t @-> CGRect.t @-> returning (void)) ~enc:"v88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56" imp
let window'willAnimateRotationToInterfaceOrientation'duration' imp = Define.method_spec ~cmd:(selector "window:willAnimateRotationToInterfaceOrientation:duration:") ~typ:(id @-> llong @-> double @-> returning (void)) ~enc:"v40@0:8@16q24d32" imp
let window'willAnimateRotationToInterfaceOrientation'duration'newSize' imp = Define.method_spec ~cmd:(selector "window:willAnimateRotationToInterfaceOrientation:duration:newSize:") ~typ:(id @-> llong @-> double @-> CGSize.t @-> returning (void)) ~enc:"v56@0:8@16q24d32{CGSize=dd}40" imp
let window'willAnimateSecondHalfOfRotationFromInterfaceOrientation'duration' imp = Define.method_spec ~cmd:(selector "window:willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:") ~typ:(id @-> llong @-> double @-> returning (void)) ~enc:"v40@0:8@16q24d32" imp
let window'willRotateToInterfaceOrientation'duration' imp = Define.method_spec ~cmd:(selector "window:willRotateToInterfaceOrientation:duration:") ~typ:(id @-> llong @-> double @-> returning (void)) ~enc:"v40@0:8@16q24d32" imp
let window'willRotateToInterfaceOrientation'duration'newSize' imp = Define.method_spec ~cmd:(selector "window:willRotateToInterfaceOrientation:duration:newSize:") ~typ:(id @-> llong @-> double @-> CGSize.t @-> returning (void)) ~enc:"v56@0:8@16q24d32{CGSize=dd}40" imp
