(library
 (name dispatch)
 (public_name camlkit-dispatch.dispatch)
 (libraries blocks_runtime ctypes ctypes.foreign)
 (ctypes
  (external_library_name libdispatch)
  (build_flags_resolver
   (vendored
    (c_flags :standard -pthread -fexceptions -fblocks -I .)
    (c_library_flags :standard %{read:flags.txt})))
  (headers (include "dispatch/dispatch.h" "dispatch/private.h"))
  (type_description
   (instance Types)
   (functor Type_description))
  (function_description
   (concurrency unlocked)
   (instance Functions)
   (functor Function_description))
  (generated_types Types_generated)
  (generated_entry_point C))
 (foreign_stubs (language c) (names stubs))
 (flags :standard -cclib %{read:flags.txt}))

(rule
 (enabled_if (= %{system} macosx))
 (target flags.txt)
 (action (with-stdout-to %{target} (echo ""))))

(rule
 (enabled_if (<> %{system} macosx))
 (target flags.txt)
 (action (with-stdout-to %{target} (echo "-L/usr/local/lib -ldispatch"))))

(rule
;  (enabled_if (= %{system} macosx))
 (target dispatch)
 (action
  (progn
   (system "mkdir dispatch")
   (system "cp *.h dispatch"))))

(copy_files
;  (enabled_if (= %{system} macosx))
 (files "private/*"))