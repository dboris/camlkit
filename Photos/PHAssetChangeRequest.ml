(* auto-generated, do not modify *)

open Runtime
open Objc

[@@@ocaml.warning "-33"]
open Foundation

(** Apple docs: {{:https://developer.apple.com/documentation/photos/phassetchangerequest?language=objc}PHAssetChangeRequest} *)

let self = get_class "PHAssetChangeRequest"

let accessibilityDescription self = msg_send ~self ~cmd:(selector "accessibilityDescription") ~typ:(returning id)
let activityScore self = msg_send ~self ~cmd:(selector "activityScore") ~typ:(returning float)
let addFaces x self = msg_send ~self ~cmd:(selector "addFaces:") ~typ:(id @-> returning void) x
let addKeywords x self = msg_send ~self ~cmd:(selector "addKeywords:") ~typ:(id @-> returning void) x
let addedDate self = msg_send ~self ~cmd:(selector "addedDate") ~typ:(returning id)
let alternateImportImageDate self = msg_send ~self ~cmd:(selector "alternateImportImageDate") ~typ:(returning id)
let applyMutationsToManagedObject x ~photoLibrary ~error self = msg_send ~self ~cmd:(selector "applyMutationsToManagedObject:photoLibrary:error:") ~typ:(id @-> id @-> (ptr id) @-> returning bool) x photoLibrary error
let assetDescription self = msg_send ~self ~cmd:(selector "assetDescription") ~typ:(returning id)
let audioClassification self = msg_send ~self ~cmd:(selector "audioClassification") ~typ:(returning short)
let autoplaySuggestionScore self = msg_send ~self ~cmd:(selector "autoplaySuggestionScore") ~typ:(returning float)
let behavioralScore self = msg_send ~self ~cmd:(selector "behavioralScore") ~typ:(returning float)
let bestVideoTimeRange self = msg_send ~self ~cmd:(selector "bestVideoTimeRange") ~typ:(returning void)
let blurrinessScore self = msg_send ~self ~cmd:(selector "blurrinessScore") ~typ:(returning float)
let colorNormalizationData self = msg_send ~self ~cmd:(selector "colorNormalizationData") ~typ:(returning id)
let contentEditingOutput self = msg_send ~self ~cmd:(selector "contentEditingOutput") ~typ:(returning id)
let creationDate self = msg_send ~self ~cmd:(selector "creationDate") ~typ:(returning id)
let curationScore self = msg_send ~self ~cmd:(selector "curationScore") ~typ:(returning double)
let didChangeAdjustments self = msg_send ~self ~cmd:(selector "didChangeAdjustments") ~typ:(returning bool)
let duplicateAllowsPrivateMetadata self = msg_send ~self ~cmd:(selector "duplicateAllowsPrivateMetadata") ~typ:(returning bool)
let editorBundleID self = msg_send ~self ~cmd:(selector "editorBundleID") ~typ:(returning id)
let encodeToXPCDict x self = msg_send ~self ~cmd:(selector "encodeToXPCDict:") ~typ:(id @-> returning void) x
let exposureScore self = msg_send ~self ~cmd:(selector "exposureScore") ~typ:(returning float)
let expungeAllSpatialOverCaptureResources self = msg_send ~self ~cmd:(selector "expungeAllSpatialOverCaptureResources") ~typ:(returning void)
let expungeTrashedSpatialOverCaptureResources self = msg_send ~self ~cmd:(selector "expungeTrashedSpatialOverCaptureResources") ~typ:(returning void)
let faceAdjustmentVersion self = msg_send ~self ~cmd:(selector "faceAdjustmentVersion") ~typ:(returning id)
let faceAnalysisVersion self = msg_send ~self ~cmd:(selector "faceAnalysisVersion") ~typ:(returning short)
let faceCount self = msg_send ~self ~cmd:(selector "faceCount") ~typ:(returning ullong)
let facesHelper self = msg_send ~self ~cmd:(selector "facesHelper") ~typ:(returning id)
let failureScore self = msg_send ~self ~cmd:(selector "failureScore") ~typ:(returning float)
let getMediaAnalysisAttributesForAsset x self = msg_send ~self ~cmd:(selector "getMediaAnalysisAttributesForAsset:") ~typ:(id @-> returning id) x
let gpsHorizontalAccuracy self = msg_send ~self ~cmd:(selector "gpsHorizontalAccuracy") ~typ:(returning double)
let harmoniousColorScore self = msg_send ~self ~cmd:(selector "harmoniousColorScore") ~typ:(returning float)
let highlightPromotionScore self = msg_send ~self ~cmd:(selector "highlightPromotionScore") ~typ:(returning double)
let highlightVisibilityScore self = msg_send ~self ~cmd:(selector "highlightVisibilityScore") ~typ:(returning double)
let imageDisplayTime self = msg_send ~self ~cmd:(selector "imageDisplayTime") ~typ:(returning void)
let immersivenessScore self = msg_send ~self ~cmd:(selector "immersivenessScore") ~typ:(returning float)
let incrementPlayCount self = msg_send ~self ~cmd:(selector "incrementPlayCount") ~typ:(returning void)
let incrementShareCount self = msg_send ~self ~cmd:(selector "incrementShareCount") ~typ:(returning void)
let incrementViewCount self = msg_send ~self ~cmd:(selector "incrementViewCount") ~typ:(returning void)
let init self = msg_send ~self ~cmd:(selector "init") ~typ:(returning id)
let initWithHelper x self = msg_send ~self ~cmd:(selector "initWithHelper:") ~typ:(id @-> returning id) x
let initWithUUID x ~objectID self = msg_send ~self ~cmd:(selector "initWithUUID:objectID:") ~typ:(id @-> id @-> returning id) x objectID
let initWithXPCDict x ~request ~clientAuthorization self = msg_send ~self ~cmd:(selector "initWithXPCDict:request:clientAuthorization:") ~typ:(id @-> id @-> id @-> returning id) x request clientAuthorization
let interactionScore self = msg_send ~self ~cmd:(selector "interactionScore") ~typ:(returning float)
let interestingSubjectScore self = msg_send ~self ~cmd:(selector "interestingSubjectScore") ~typ:(returning float)
let intrusiveObjectPresenceScore self = msg_send ~self ~cmd:(selector "intrusiveObjectPresenceScore") ~typ:(returning float)
let isFavorite self = msg_send ~self ~cmd:(selector "isFavorite") ~typ:(returning bool)
let isHidden self = msg_send ~self ~cmd:(selector "isHidden") ~typ:(returning bool)
let isHiding self = msg_send ~self ~cmd:(selector "isHiding") ~typ:(returning bool)
let isRevertingContentToOriginal self = msg_send ~self ~cmd:(selector "isRevertingContentToOriginal") ~typ:(returning bool)
let keywordTitles self = msg_send ~self ~cmd:(selector "keywordTitles") ~typ:(returning id)
let livelyColorScore self = msg_send ~self ~cmd:(selector "livelyColorScore") ~typ:(returning float)
let location self = msg_send ~self ~cmd:(selector "location") ~typ:(returning id)
let lowLight self = msg_send ~self ~cmd:(selector "lowLight") ~typ:(returning float)
let managedEntityName self = msg_send ~self ~cmd:(selector "managedEntityName") ~typ:(returning id)
let markDidChangeAdjustments self = msg_send ~self ~cmd:(selector "markDidChangeAdjustments") ~typ:(returning void)
let mediaAnalysisTimeStamp self = msg_send ~self ~cmd:(selector "mediaAnalysisTimeStamp") ~typ:(returning id)
let mediaAnalysisVersion self = msg_send ~self ~cmd:(selector "mediaAnalysisVersion") ~typ:(returning ullong)
let modificationDate self = msg_send ~self ~cmd:(selector "modificationDate") ~typ:(returning id)
let noiseScore self = msg_send ~self ~cmd:(selector "noiseScore") ~typ:(returning float)
let objectSaliencyRects self = msg_send ~self ~cmd:(selector "objectSaliencyRects") ~typ:(returning id)
let originalResourceChoice self = msg_send ~self ~cmd:(selector "originalResourceChoice") ~typ:(returning ullong)
let overallAestheticScore self = msg_send ~self ~cmd:(selector "overallAestheticScore") ~typ:(returning float)
let pairingIdentifier self = msg_send ~self ~cmd:(selector "pairingIdentifier") ~typ:(returning id)
let photoIrisVisibilityState self = msg_send ~self ~cmd:(selector "photoIrisVisibilityState") ~typ:(returning ushort)
let placeholderForCreatedAsset self = msg_send ~self ~cmd:(selector "placeholderForCreatedAsset") ~typ:(returning id)
let pleasantCameraTiltScore self = msg_send ~self ~cmd:(selector "pleasantCameraTiltScore") ~typ:(returning float)
let pleasantCompositionScore self = msg_send ~self ~cmd:(selector "pleasantCompositionScore") ~typ:(returning float)
let pleasantLightingScore self = msg_send ~self ~cmd:(selector "pleasantLightingScore") ~typ:(returning float)
let pleasantPatternScore self = msg_send ~self ~cmd:(selector "pleasantPatternScore") ~typ:(returning float)
let pleasantPerspectiveScore self = msg_send ~self ~cmd:(selector "pleasantPerspectiveScore") ~typ:(returning float)
let pleasantPostProcessingScore self = msg_send ~self ~cmd:(selector "pleasantPostProcessingScore") ~typ:(returning float)
let pleasantReflectionsScore self = msg_send ~self ~cmd:(selector "pleasantReflectionsScore") ~typ:(returning float)
let pleasantSymmetryScore self = msg_send ~self ~cmd:(selector "pleasantSymmetryScore") ~typ:(returning float)
let prepareForPhotoLibraryCheck x ~error self = msg_send ~self ~cmd:(selector "prepareForPhotoLibraryCheck:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let probableRotationDirection self = msg_send ~self ~cmd:(selector "probableRotationDirection") ~typ:(returning short)
let probableRotationDirectionConfidence self = msg_send ~self ~cmd:(selector "probableRotationDirectionConfidence") ~typ:(returning float)
let promoteToGuestAsset self = msg_send ~self ~cmd:(selector "promoteToGuestAsset") ~typ:(returning void)
let reframeVariation self = msg_send ~self ~cmd:(selector "reframeVariation") ~typ:(returning ullong)
let removeFaces x self = msg_send ~self ~cmd:(selector "removeFaces:") ~typ:(id @-> returning void) x
let removeFromMyPhotoStream self = msg_send ~self ~cmd:(selector "removeFromMyPhotoStream") ~typ:(returning void)
let removeKeywords x self = msg_send ~self ~cmd:(selector "removeKeywords:") ~typ:(id @-> returning void) x
let resetCharacterRecognitionAttributes self = msg_send ~self ~cmd:(selector "resetCharacterRecognitionAttributes") ~typ:(returning void)
let resetGuestAssetPromotion self = msg_send ~self ~cmd:(selector "resetGuestAssetPromotion") ~typ:(returning void)
let resetVisualSearchAttributes self = msg_send ~self ~cmd:(selector "resetVisualSearchAttributes") ~typ:(returning void)
let retryUpload self = msg_send ~self ~cmd:(selector "retryUpload") ~typ:(returning void)
let reverseLocationData self = msg_send ~self ~cmd:(selector "reverseLocationData") ~typ:(returning id)
let reverseLocationDataIsValid self = msg_send ~self ~cmd:(selector "reverseLocationDataIsValid") ~typ:(returning bool)
let revertAssetContentToOriginal self = msg_send ~self ~cmd:(selector "revertAssetContentToOriginal") ~typ:(returning void)
let revertLocationToOriginal self = msg_send ~self ~cmd:(selector "revertLocationToOriginal") ~typ:(returning void)
let sceneprintData self = msg_send ~self ~cmd:(selector "sceneprintData") ~typ:(returning id)
let screenTimeDeviceImageSensitivity self = msg_send ~self ~cmd:(selector "screenTimeDeviceImageSensitivity") ~typ:(returning short)
let setAcceptableCropRectWithNormalizedRect x self = msg_send ~self ~cmd:(selector "setAcceptableCropRectWithNormalizedRect:") ~typ:(CGRect.t @-> returning void) x
let setAccessibilityDescription x self = msg_send ~self ~cmd:(selector "setAccessibilityDescription:") ~typ:(id @-> returning void) x
let setActivityScore x self = msg_send ~self ~cmd:(selector "setActivityScore:") ~typ:(float @-> returning void) x
let setAddedDate x self = msg_send ~self ~cmd:(selector "setAddedDate:") ~typ:(id @-> returning void) x
let setAdjustmentData x ~withRenderedJPEGData ~orRenderedContentURL ~penultimateRenderedJPEGData ~isSubstandardRender ~fullSizeRenderSize ~renderedVideoComplementURL ~penultimateRenderedVideoComplementURL self = msg_send ~self ~cmd:(selector "setAdjustmentData:withRenderedJPEGData:orRenderedContentURL:penultimateRenderedJPEGData:isSubstandardRender:fullSizeRenderSize:renderedVideoComplementURL:penultimateRenderedVideoComplementURL:") ~typ:(id @-> id @-> id @-> id @-> bool @-> CGSize.t @-> id @-> id @-> returning void) x withRenderedJPEGData orRenderedContentURL penultimateRenderedJPEGData isSubstandardRender fullSizeRenderSize renderedVideoComplementURL penultimateRenderedVideoComplementURL
let setAdjustmentData' x ~withRenderedJPEGData ~orRenderedContentURL ~penultimateRenderedJPEGData ~isSubstandardRender ~fullSizeRenderSize ~renderedVideoComplementURL ~penultimateRenderedVideoComplementURL ~optionalOriginalResourceChoice self = msg_send ~self ~cmd:(selector "setAdjustmentData:withRenderedJPEGData:orRenderedContentURL:penultimateRenderedJPEGData:isSubstandardRender:fullSizeRenderSize:renderedVideoComplementURL:penultimateRenderedVideoComplementURL:optionalOriginalResourceChoice:") ~typ:(id @-> id @-> id @-> id @-> bool @-> CGSize.t @-> id @-> id @-> id @-> returning void) x withRenderedJPEGData orRenderedContentURL penultimateRenderedJPEGData isSubstandardRender fullSizeRenderSize renderedVideoComplementURL penultimateRenderedVideoComplementURL optionalOriginalResourceChoice
let setAlternateImportImageDate x self = msg_send ~self ~cmd:(selector "setAlternateImportImageDate:") ~typ:(id @-> returning void) x
let setAssetDescription x self = msg_send ~self ~cmd:(selector "setAssetDescription:") ~typ:(id @-> returning void) x
let setAudioClassification x self = msg_send ~self ~cmd:(selector "setAudioClassification:") ~typ:(short @-> returning void) x
let setAutoplaySuggestionScore x self = msg_send ~self ~cmd:(selector "setAutoplaySuggestionScore:") ~typ:(float @-> returning void) x
let setBehavioralScore x self = msg_send ~self ~cmd:(selector "setBehavioralScore:") ~typ:(float @-> returning void) x
let setBestKeyFrame x ~time self = msg_send ~self ~cmd:(selector "setBestKeyFrame:time:") ~typ:((ptr CGImage.t) @-> void @-> returning void) x time
let setBestPlaybackRectWithNormalizedRect x self = msg_send ~self ~cmd:(selector "setBestPlaybackRectWithNormalizedRect:") ~typ:(CGRect.t @-> returning void) x
let setBestVideoTimeRange x self = msg_send ~self ~cmd:(selector "setBestVideoTimeRange:") ~typ:(void @-> returning void) x
let setBlurrinessScore x self = msg_send ~self ~cmd:(selector "setBlurrinessScore:") ~typ:(float @-> returning void) x
let setCharacterRecognitionData x ~algorithmVersion ~adjustmentVersion self = msg_send ~self ~cmd:(selector "setCharacterRecognitionData:algorithmVersion:adjustmentVersion:") ~typ:(id @-> llong @-> id @-> returning void) x (LLong.of_int algorithmVersion) adjustmentVersion
let setCharacterRecognitionData' x ~machineReadableCodeData ~algorithmVersion ~adjustmentVersion self = msg_send ~self ~cmd:(selector "setCharacterRecognitionData:machineReadableCodeData:algorithmVersion:adjustmentVersion:") ~typ:(id @-> id @-> llong @-> id @-> returning void) x machineReadableCodeData (LLong.of_int algorithmVersion) adjustmentVersion
let setColorNormalizationData x self = msg_send ~self ~cmd:(selector "setColorNormalizationData:") ~typ:(id @-> returning void) x
let setContentEditingOutput x self = msg_send ~self ~cmd:(selector "setContentEditingOutput:") ~typ:(id @-> returning void) x
let setCreationDate x self = msg_send ~self ~cmd:(selector "setCreationDate:") ~typ:(id @-> returning void) x
let setCurationScore x self = msg_send ~self ~cmd:(selector "setCurationScore:") ~typ:(double @-> returning void) x
let setExposureScore x self = msg_send ~self ~cmd:(selector "setExposureScore:") ~typ:(float @-> returning void) x
let setFaceAdjustmentVersion x self = msg_send ~self ~cmd:(selector "setFaceAdjustmentVersion:") ~typ:(id @-> returning void) x
let setFaceAnalysisVersion x self = msg_send ~self ~cmd:(selector "setFaceAnalysisVersion:") ~typ:(short @-> returning void) x
let setFaceCount x self = msg_send ~self ~cmd:(selector "setFaceCount:") ~typ:(ullong @-> returning void) (ULLong.of_int x)
let setFailureScore x self = msg_send ~self ~cmd:(selector "setFailureScore:") ~typ:(float @-> returning void) x
let setFavorite x self = msg_send ~self ~cmd:(selector "setFavorite:") ~typ:(bool @-> returning void) x
let setGpsHorizontalAccuracy x self = msg_send ~self ~cmd:(selector "setGpsHorizontalAccuracy:") ~typ:(double @-> returning void) x
let setHarmoniousColorScore x self = msg_send ~self ~cmd:(selector "setHarmoniousColorScore:") ~typ:(float @-> returning void) x
let setHidden x self = msg_send ~self ~cmd:(selector "setHidden:") ~typ:(bool @-> returning void) x
let setHighlightPromotionScore x self = msg_send ~self ~cmd:(selector "setHighlightPromotionScore:") ~typ:(double @-> returning void) x
let setHighlightVisibilityScore x self = msg_send ~self ~cmd:(selector "setHighlightVisibilityScore:") ~typ:(double @-> returning void) x
let setImageDisplayTime x self = msg_send ~self ~cmd:(selector "setImageDisplayTime:") ~typ:(void @-> returning void) x
let setImmersivenessScore x self = msg_send ~self ~cmd:(selector "setImmersivenessScore:") ~typ:(float @-> returning void) x
let setInteractionScore x self = msg_send ~self ~cmd:(selector "setInteractionScore:") ~typ:(float @-> returning void) x
let setInterestingSubjectScore x self = msg_send ~self ~cmd:(selector "setInterestingSubjectScore:") ~typ:(float @-> returning void) x
let setIntrusiveObjectPresenceScore x self = msg_send ~self ~cmd:(selector "setIntrusiveObjectPresenceScore:") ~typ:(float @-> returning void) x
let setKeywordTitles x self = msg_send ~self ~cmd:(selector "setKeywordTitles:") ~typ:(id @-> returning void) x
let setLivelyColorScore x self = msg_send ~self ~cmd:(selector "setLivelyColorScore:") ~typ:(float @-> returning void) x
let setLocation x self = msg_send ~self ~cmd:(selector "setLocation:") ~typ:(id @-> returning void) x
let setLowLight x self = msg_send ~self ~cmd:(selector "setLowLight:") ~typ:(float @-> returning void) x
let setMediaAnalysisTimeStamp x self = msg_send ~self ~cmd:(selector "setMediaAnalysisTimeStamp:") ~typ:(id @-> returning void) x
let setMediaAnalysisVersion x self = msg_send ~self ~cmd:(selector "setMediaAnalysisVersion:") ~typ:(ullong @-> returning void) (ULLong.of_int x)
let setModificationDate x self = msg_send ~self ~cmd:(selector "setModificationDate:") ~typ:(id @-> returning void) x
let setNoiseScore x self = msg_send ~self ~cmd:(selector "setNoiseScore:") ~typ:(float @-> returning void) x
let setObjectSaliencyRects x self = msg_send ~self ~cmd:(selector "setObjectSaliencyRects:") ~typ:(id @-> returning void) x
let setOriginalResourceChoice x self = msg_send ~self ~cmd:(selector "setOriginalResourceChoice:") ~typ:(ullong @-> returning void) (ULLong.of_int x)
let setOverallAestheticScore x self = msg_send ~self ~cmd:(selector "setOverallAestheticScore:") ~typ:(float @-> returning void) x
let setPairingIdentifier x self = msg_send ~self ~cmd:(selector "setPairingIdentifier:") ~typ:(id @-> returning void) x
let setPhotoIrisVisibilityState x self = msg_send ~self ~cmd:(selector "setPhotoIrisVisibilityState:") ~typ:(ushort @-> returning void) x
let setPleasantCameraTiltScore x self = msg_send ~self ~cmd:(selector "setPleasantCameraTiltScore:") ~typ:(float @-> returning void) x
let setPleasantCompositionScore x self = msg_send ~self ~cmd:(selector "setPleasantCompositionScore:") ~typ:(float @-> returning void) x
let setPleasantLightingScore x self = msg_send ~self ~cmd:(selector "setPleasantLightingScore:") ~typ:(float @-> returning void) x
let setPleasantPatternScore x self = msg_send ~self ~cmd:(selector "setPleasantPatternScore:") ~typ:(float @-> returning void) x
let setPleasantPerspectiveScore x self = msg_send ~self ~cmd:(selector "setPleasantPerspectiveScore:") ~typ:(float @-> returning void) x
let setPleasantPostProcessingScore x self = msg_send ~self ~cmd:(selector "setPleasantPostProcessingScore:") ~typ:(float @-> returning void) x
let setPleasantReflectionsScore x self = msg_send ~self ~cmd:(selector "setPleasantReflectionsScore:") ~typ:(float @-> returning void) x
let setPleasantSymmetryScore x self = msg_send ~self ~cmd:(selector "setPleasantSymmetryScore:") ~typ:(float @-> returning void) x
let setPreferredCropRectWithNormalizedRect x self = msg_send ~self ~cmd:(selector "setPreferredCropRectWithNormalizedRect:") ~typ:(CGRect.t @-> returning void) x
let setProbableRotationDirection x self = msg_send ~self ~cmd:(selector "setProbableRotationDirection:") ~typ:(short @-> returning void) x
let setProbableRotationDirectionConfidence x self = msg_send ~self ~cmd:(selector "setProbableRotationDirectionConfidence:") ~typ:(float @-> returning void) x
let setRectWithNormalizedRect x ~forPackedRect ~forSetFlag self = msg_send ~self ~cmd:(selector "setRectWithNormalizedRect:forPackedRect:forSetFlag:") ~typ:(CGRect.t @-> (ptr llong) @-> (ptr bool) @-> returning void) x forPackedRect forSetFlag
let setReframeVariation x self = msg_send ~self ~cmd:(selector "setReframeVariation:") ~typ:(ullong @-> returning void) (ULLong.of_int x)
let setReverseLocationData x self = msg_send ~self ~cmd:(selector "setReverseLocationData:") ~typ:(id @-> returning void) x
let setReverseLocationDataIsValid x self = msg_send ~self ~cmd:(selector "setReverseLocationDataIsValid:") ~typ:(bool @-> returning void) x
let setSceneClassifications x ~algorithmVersion ~adjustmentVersion self = msg_send ~self ~cmd:(selector "setSceneClassifications:algorithmVersion:adjustmentVersion:") ~typ:(id @-> short @-> id @-> returning void) x algorithmVersion adjustmentVersion
let setSceneClassifications' x ~algorithmVersion ~distanceIdentity ~adjustmentVersion self = msg_send ~self ~cmd:(selector "setSceneClassifications:algorithmVersion:distanceIdentity:adjustmentVersion:") ~typ:(id @-> short @-> id @-> id @-> returning void) x algorithmVersion distanceIdentity adjustmentVersion
let setSceneprintData x self = msg_send ~self ~cmd:(selector "setSceneprintData:") ~typ:(id @-> returning void) x
let setScreenTimeDeviceImageSensitivity x self = msg_send ~self ~cmd:(selector "setScreenTimeDeviceImageSensitivity:") ~typ:(short @-> returning void) x
let setSharplyFocusedSubjectScore x self = msg_send ~self ~cmd:(selector "setSharplyFocusedSubjectScore:") ~typ:(float @-> returning void) x
let setShiftedLocation x self = msg_send ~self ~cmd:(selector "setShiftedLocation:") ~typ:(id @-> returning void) x
let setSupportedEditOperations x self = msg_send ~self ~cmd:(selector "setSupportedEditOperations:") ~typ:(id @-> returning void) x
let setSyndicationIdentifierOnMomentSharedAsset x self = msg_send ~self ~cmd:(selector "setSyndicationIdentifierOnMomentSharedAsset:") ~typ:(id @-> returning void) x
let setSyndicationProcessingValue x self = msg_send ~self ~cmd:(selector "setSyndicationProcessingValue:") ~typ:(ushort @-> returning void) x
let setSyndicationProcessingVersion x self = msg_send ~self ~cmd:(selector "setSyndicationProcessingVersion:") ~typ:(ullong @-> returning void) (ULLong.of_int x)
let setTastefullyBlurredScore x self = msg_send ~self ~cmd:(selector "setTastefullyBlurredScore:") ~typ:(float @-> returning void) x
let setTestScore x self = msg_send ~self ~cmd:(selector "setTestScore:") ~typ:(float @-> returning void) x
let setTimeZone x ~withDate self = msg_send ~self ~cmd:(selector "setTimeZone:withDate:") ~typ:(id @-> id @-> returning void) x withDate
let setTitle x self = msg_send ~self ~cmd:(selector "setTitle:") ~typ:(id @-> returning void) x
let setVariationSuggestionStates x ~forVariationType self = msg_send ~self ~cmd:(selector "setVariationSuggestionStates:forVariationType:") ~typ:(ullong @-> ullong @-> returning void) (ULLong.of_int x) (ULLong.of_int forVariationType)
let setVideoDuration x self = msg_send ~self ~cmd:(selector "setVideoDuration:") ~typ:(void @-> returning void) x
let setVideoScore x self = msg_send ~self ~cmd:(selector "setVideoScore:") ~typ:(float @-> returning void) x
let setVideoURLForUpdate x self = msg_send ~self ~cmd:(selector "setVideoURLForUpdate:") ~typ:(id @-> returning void) x
let setVisualSearchData x ~algorithmVersion ~adjustmentVersion self = msg_send ~self ~cmd:(selector "setVisualSearchData:algorithmVersion:adjustmentVersion:") ~typ:(id @-> llong @-> id @-> returning void) x (LLong.of_int algorithmVersion) adjustmentVersion
let setWellChosenSubjectScore x self = msg_send ~self ~cmd:(selector "setWellChosenSubjectScore:") ~typ:(float @-> returning void) x
let setWellFramedSubjectScore x self = msg_send ~self ~cmd:(selector "setWellFramedSubjectScore:") ~typ:(float @-> returning void) x
let setWellTimedShotScore x self = msg_send ~self ~cmd:(selector "setWellTimedShotScore:") ~typ:(float @-> returning void) x
let sharplyFocusedSubjectScore self = msg_send ~self ~cmd:(selector "sharplyFocusedSubjectScore") ~typ:(returning float)
let shiftedLocation self = msg_send ~self ~cmd:(selector "shiftedLocation") ~typ:(returning id)
let supportedEditOperations self = msg_send ~self ~cmd:(selector "supportedEditOperations") ~typ:(returning id)
let syndicationProcessingValue self = msg_send ~self ~cmd:(selector "syndicationProcessingValue") ~typ:(returning ushort)
let syndicationProcessingVersion self = msg_send ~self ~cmd:(selector "syndicationProcessingVersion") ~typ:(returning ullong)
let tastefullyBlurredScore self = msg_send ~self ~cmd:(selector "tastefullyBlurredScore") ~typ:(returning float)
let testScore self = msg_send ~self ~cmd:(selector "testScore") ~typ:(returning float)
let title self = msg_send ~self ~cmd:(selector "title") ~typ:(returning id)
let trashAllSpatialOverCaptureResources self = msg_send ~self ~cmd:(selector "trashAllSpatialOverCaptureResources") ~typ:(returning void)
let untrashAllSpatialOverCaptureResources self = msg_send ~self ~cmd:(selector "untrashAllSpatialOverCaptureResources") ~typ:(returning void)
let updateExtendedAttributesUsingOriginalMediaMetadata self = msg_send ~self ~cmd:(selector "updateExtendedAttributesUsingOriginalMediaMetadata") ~typ:(returning void)
let validateAccessibilityDescription x ~error self = msg_send ~self ~cmd:(selector "validateAccessibilityDescription:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let validateAdjustmentDataForAssetMutation x ~error self = msg_send ~self ~cmd:(selector "validateAdjustmentDataForAssetMutation:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let validateAssetDescription x ~error self = msg_send ~self ~cmd:(selector "validateAssetDescription:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let validateContentEditingOutput x ~error self = msg_send ~self ~cmd:(selector "validateContentEditingOutput:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let validateMutationsToManagedObject x ~error self = msg_send ~self ~cmd:(selector "validateMutationsToManagedObject:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let validateReadAccessForContentURL x ~assetResource ~error self = msg_send ~self ~cmd:(selector "validateReadAccessForContentURL:assetResource:error:") ~typ:(id @-> id @-> (ptr id) @-> returning bool) x assetResource error
let validateVideoURLForAssetMutation x ~error self = msg_send ~self ~cmd:(selector "validateVideoURLForAssetMutation:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let validateWriteAccessForContentURL x ~error self = msg_send ~self ~cmd:(selector "validateWriteAccessForContentURL:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let videoDuration self = msg_send ~self ~cmd:(selector "videoDuration") ~typ:(returning void)
let videoScore self = msg_send ~self ~cmd:(selector "videoScore") ~typ:(returning float)
let videoURLForUpdate self = msg_send ~self ~cmd:(selector "videoURLForUpdate") ~typ:(returning id)
let wellChosenSubjectScore self = msg_send ~self ~cmd:(selector "wellChosenSubjectScore") ~typ:(returning float)
let wellFramedSubjectScore self = msg_send ~self ~cmd:(selector "wellFramedSubjectScore") ~typ:(returning float)
let wellTimedShotScore self = msg_send ~self ~cmd:(selector "wellTimedShotScore") ~typ:(returning float)