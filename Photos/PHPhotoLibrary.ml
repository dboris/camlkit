(* auto-generated, do not modify *)

open Runtime
open Objc

[@@@ocaml.warning "-33"]
open Foundation

(** Apple docs: {{:https://developer.apple.com/documentation/photos/phphotolibrary?language=objc}PHPhotoLibrary} *)

let self = get_class "PHPhotoLibrary"

let accountDidChange x self = msg_send ~self ~cmd:(selector "accountDidChange:") ~typ:(id @-> returning void) x
let albumRootFolderObjectID self = msg_send ~self ~cmd:(selector "albumRootFolderObjectID") ~typ:(returning id)
let allSocialGroupsForPersonIdentifier x ~error self = msg_send ~self ~cmd:(selector "allSocialGroupsForPersonIdentifier:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let allowedEntities self = msg_send ~self ~cmd:(selector "allowedEntities") ~typ:(returning id)
let analysisProgressCountsForWorkerType x self = msg_send ~self ~cmd:(selector "analysisProgressCountsForWorkerType:") ~typ:(short @-> returning id) x
let appPrivateData self = msg_send ~self ~cmd:(selector "appPrivateData") ~typ:(returning id)
let appPrivateDataWriteFailedWithError x self = msg_send ~self ~cmd:(selector "appPrivateDataWriteFailedWithError:") ~typ:(id @-> returning void) x
let assertTransaction self = msg_send ~self ~cmd:(selector "assertTransaction") ~typ:(returning void)
let assetIdentifiersForPersonIdentifiers x ~error self = msg_send ~self ~cmd:(selector "assetIdentifiersForPersonIdentifiers:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let assetUUIDsAllowedForCurationFromAssets x self = msg_send ~self ~cmd:(selector "assetUUIDsAllowedForCurationFromAssets:") ~typ:(id @-> returning id) x
let assetsdClient self = msg_send ~self ~cmd:(selector "assetsdClient") ~typ:(returning id)
let availabilityObservers self = msg_send ~self ~cmd:(selector "availabilityObservers") ~typ:(returning id)
let backgroundQueueObjectFetchingPhotoLibrary self = msg_send ~self ~cmd:(selector "backgroundQueueObjectFetchingPhotoLibrary") ~typ:(returning id)
let backgroundQueuePhotoLibrary self = msg_send ~self ~cmd:(selector "backgroundQueuePhotoLibrary") ~typ:(returning id)
let cacheMetricsCollector self = msg_send ~self ~cmd:(selector "cacheMetricsCollector") ~typ:(returning id)
let cancelOperationsWithIdentifiers x ~reply self = msg_send ~self ~cmd:(selector "cancelOperationsWithIdentifiers:reply:") ~typ:(id @-> (ptr void) @-> returning void) x reply
let changeHandlingPhotoLibrary self = msg_send ~self ~cmd:(selector "changeHandlingPhotoLibrary") ~typ:(returning id)
let changeNotificationInfo self = msg_send ~self ~cmd:(selector "changeNotificationInfo") ~typ:(returning id)
let changeRequestForUUID x self = msg_send ~self ~cmd:(selector "changeRequestForUUID:") ~typ:(id @-> returning id) x
let clearsOIDCacheAfterFetchResultDealloc self = msg_send ~self ~cmd:(selector "clearsOIDCacheAfterFetchResultDealloc") ~typ:(returning bool)
let close self = msg_send ~self ~cmd:(selector "close") ~typ:(returning void)
let closeWithReason x self = msg_send ~self ~cmd:(selector "closeWithReason:") ~typ:(id @-> returning void) x
let cloudIdentifierMappingsForLocalIdentifiers x self = msg_send ~self ~cmd:(selector "cloudIdentifierMappingsForLocalIdentifiers:") ~typ:(id @-> returning id) x
let cloudIdentifiersForLocalIdentifiers x self = msg_send ~self ~cmd:(selector "cloudIdentifiersForLocalIdentifiers:") ~typ:(id @-> returning id) x
let countOfClusteringEligibleFaces self = msg_send ~self ~cmd:(selector "countOfClusteringEligibleFaces") ~typ:(returning ullong)
let countOfDirtyFaceGroups self = msg_send ~self ~cmd:(selector "countOfDirtyFaceGroups") ~typ:(returning ullong)
let countOfFaceCropsToBeGenerated self = msg_send ~self ~cmd:(selector "countOfFaceCropsToBeGenerated") ~typ:(returning ullong)
let countOfReferencedMediaWithCompletionHandler x self = msg_send ~self ~cmd:(selector "countOfReferencedMediaWithCompletionHandler:") ~typ:((ptr void) @-> returning void) x
let countOfUnclusteredFaces self = msg_send ~self ~cmd:(selector "countOfUnclusteredFaces") ~typ:(returning ullong)
let countOfUnprocessedFaceCrops self = msg_send ~self ~cmd:(selector "countOfUnprocessedFaceCrops") ~typ:(returning ullong)
let cplStatus self = msg_send ~self ~cmd:(selector "cplStatus") ~typ:(returning id)
let createOrUpgradeLibraryUsingOptions x ~error self = msg_send ~self ~cmd:(selector "createOrUpgradeLibraryUsingOptions:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let createPhotoLibraryUsingOptions x ~error self = msg_send ~self ~cmd:(selector "createPhotoLibraryUsingOptions:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let createPhotoLibraryWithError x self = msg_send ~self ~cmd:(selector "createPhotoLibraryWithError:") ~typ:((ptr id) @-> returning bool) x
let createPhotoLibraryWithOptions x ~error self = msg_send ~self ~cmd:(selector "createPhotoLibraryWithOptions:error:") ~typ:(ullong @-> (ptr id) @-> returning bool) (ULLong.of_int x) error
let curationDebugInformationForAssetCollectionWithLocalIdentifier x ~options ~error self = msg_send ~self ~cmd:(selector "curationDebugInformationForAssetCollectionWithLocalIdentifier:options:error:") ~typ:(id @-> id @-> (ptr id) @-> returning id) x options error
let curationDebugInformationForAssetLocalIdentifier x ~error self = msg_send ~self ~cmd:(selector "curationDebugInformationForAssetLocalIdentifier:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let currentToken self = msg_send ~self ~cmd:(selector "currentToken") ~typ:(returning id)
let dealloc self = msg_send ~self ~cmd:(selector "dealloc") ~typ:(returning void)
let debugDescription self = msg_send ~self ~cmd:(selector "debugDescription") ~typ:(returning id)
let exportGraphForPurpose x ~error self = msg_send ~self ~cmd:(selector "exportGraphForPurpose:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let externalChangeObservers self = msg_send ~self ~cmd:(selector "externalChangeObservers") ~typ:(returning id)
let faceAnalysisProgressCounts self = msg_send ~self ~cmd:(selector "faceAnalysisProgressCounts") ~typ:(returning id)
let faceAnalysisProgressForHighlight x ~error self = msg_send ~self ~cmd:(selector "faceAnalysisProgressForHighlight:error:") ~typ:(id @-> (ptr id) @-> returning double) x error
let faceClusterSequenceNumbersOfFacesWithClusterSequenceNumbers x ~error self = msg_send ~self ~cmd:(selector "faceClusterSequenceNumbersOfFacesWithClusterSequenceNumbers:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let faceClusterSequenceNumbersOfKeyFacesInAlgorithmicFaceGroupsForPerson x ~verifiedClusterSequenceNumbers self = msg_send ~self ~cmd:(selector "faceClusterSequenceNumbersOfKeyFacesInAlgorithmicFaceGroupsForPerson:verifiedClusterSequenceNumbers:") ~typ:(id @-> id @-> returning id) x verifiedClusterSequenceNumbers
let fetchDictionariesByPHClassForOIDs x ~propertyHint ~includeTrash ~overrideWithPHClass self = msg_send ~self ~cmd:(selector "fetchDictionariesByPHClassForOIDs:propertyHint:includeTrash:overrideWithPHClass:") ~typ:(id @-> ullong @-> bool @-> _Class @-> returning id) x (ULLong.of_int propertyHint) includeTrash overrideWithPHClass
let fetchPHObjectsForOIDs x self = msg_send ~self ~cmd:(selector "fetchPHObjectsForOIDs:") ~typ:(id @-> returning id) x
let fetchPHObjectsForOIDs' x ~propertyHint ~includeTrash ~overrideResultsWithClass self = msg_send ~self ~cmd:(selector "fetchPHObjectsForOIDs:propertyHint:includeTrash:overrideResultsWithClass:") ~typ:(id @-> ullong @-> bool @-> _Class @-> returning id) x (ULLong.of_int propertyHint) includeTrash overrideResultsWithClass
let fetchPHObjectsForUUIDs x ~entityName self = msg_send ~self ~cmd:(selector "fetchPHObjectsForUUIDs:entityName:") ~typ:(id @-> id @-> returning id) x entityName
let fetchPersistentChangesSinceToken x ~error self = msg_send ~self ~cmd:(selector "fetchPersistentChangesSinceToken:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let fetchPersistentChangesWithRequest x ~error self = msg_send ~self ~cmd:(selector "fetchPersistentChangesWithRequest:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let fetchResultsRegisteredForChangeNotifications self = msg_send ~self ~cmd:(selector "fetchResultsRegisteredForChangeNotifications") ~typ:(returning id)
let fetchUpdatedObject x self = msg_send ~self ~cmd:(selector "fetchUpdatedObject:") ~typ:(id @-> returning id) x
let fetchedObjectsForOIDs x ~propertySetClass self = msg_send ~self ~cmd:(selector "fetchedObjectsForOIDs:propertySetClass:") ~typ:(id @-> _Class @-> returning id) x propertySetClass
let graphStatisticsDescription x self = msg_send ~self ~cmd:(selector "graphStatisticsDescription:") ~typ:((ptr id) @-> returning id) x
let graphStatusDescription x self = msg_send ~self ~cmd:(selector "graphStatusDescription:") ~typ:((ptr id) @-> returning id) x
let handleMergeNotification x self = msg_send ~self ~cmd:(selector "handleMergeNotification:") ~typ:(id @-> returning void) x
let highlightDebugInformationForHighlightWithLocalIdentifier x ~error self = msg_send ~self ~cmd:(selector "highlightDebugInformationForHighlightWithLocalIdentifier:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let imageConversionServiceClient self = msg_send ~self ~cmd:(selector "imageConversionServiceClient") ~typ:(returning id)
let importAssetsFromLibrary x ~assetIdentifiers ~containerIdentifier ~resultHandler self = msg_send ~self ~cmd:(selector "importAssetsFromLibrary:assetIdentifiers:containerIdentifier:resultHandler:") ~typ:(id @-> id @-> id @-> (ptr void) @-> returning void) x assetIdentifiers containerIdentifier resultHandler
let inferredContactByPersonLocalIdentifierForPersonLocalIdentifiers x self = msg_send ~self ~cmd:(selector "inferredContactByPersonLocalIdentifierForPersonLocalIdentifiers:") ~typ:(id @-> returning id) x
let inferredContactForPersonLocalIdentifier x self = msg_send ~self ~cmd:(selector "inferredContactForPersonLocalIdentifier:") ~typ:(id @-> returning id) x
let init self = msg_send ~self ~cmd:(selector "init") ~typ:(returning id)
let initMomentShareLibrary self = msg_send ~self ~cmd:(selector "initMomentShareLibrary") ~typ:(returning id)
let initSharedLibrary self = msg_send ~self ~cmd:(selector "initSharedLibrary") ~typ:(returning id)
let initWithPLPhotoLibrary x self = msg_send ~self ~cmd:(selector "initWithPLPhotoLibrary:") ~typ:(id @-> returning id) x
let initWithPLPhotoLibrary' x ~type_ self = msg_send ~self ~cmd:(selector "initWithPLPhotoLibrary:type:") ~typ:(id @-> ushort @-> returning id) x type_
let initWithPhotoLibraryBundle x ~type_ self = msg_send ~self ~cmd:(selector "initWithPhotoLibraryBundle:type:") ~typ:(id @-> ushort @-> returning id) x type_
let initWithPhotoLibraryURL x self = msg_send ~self ~cmd:(selector "initWithPhotoLibraryURL:") ~typ:(id @-> returning id) x
let initWithPhotoLibraryURL' x ~type_ self = msg_send ~self ~cmd:(selector "initWithPhotoLibraryURL:type:") ~typ:(id @-> ushort @-> returning id) x type_
let internalChangeObservers self = msg_send ~self ~cmd:(selector "internalChangeObservers") ~typ:(returning id)
let invalidatePersistentGraphCachesAndReturnError x self = msg_send ~self ~cmd:(selector "invalidatePersistentGraphCachesAndReturnError:") ~typ:((ptr id) @-> returning bool) x
let invalidateTransientGraphCachesAndReturnError x self = msg_send ~self ~cmd:(selector "invalidateTransientGraphCachesAndReturnError:") ~typ:((ptr id) @-> returning bool) x
let isChangeHandlingActive self = msg_send ~self ~cmd:(selector "isChangeHandlingActive") ~typ:(returning bool)
let isChangeHandlingAuthorized self = msg_send ~self ~cmd:(selector "isChangeHandlingAuthorized") ~typ:(returning bool)
let isChangeProcessingPending self = msg_send ~self ~cmd:(selector "isChangeProcessingPending") ~typ:(returning bool)
let isCloudPhotoLibrary self = msg_send ~self ~cmd:(selector "isCloudPhotoLibrary") ~typ:(returning bool)
let isCloudPhotoLibraryEnabled self = msg_send ~self ~cmd:(selector "isCloudPhotoLibraryEnabled") ~typ:(returning bool)
let isFaceProcessingFinished self = msg_send ~self ~cmd:(selector "isFaceProcessingFinished") ~typ:(returning bool)
let isPHPhotoLibraryForCMM self = msg_send ~self ~cmd:(selector "isPHPhotoLibraryForCMM") ~typ:(returning bool)
let isReadOnlyCloudPhotoLibrary self = msg_send ~self ~cmd:(selector "isReadOnlyCloudPhotoLibrary") ~typ:(returning bool)
let isReadyForAnalysis self = msg_send ~self ~cmd:(selector "isReadyForAnalysis") ~typ:(returning bool)
let isSystemPhotoLibrary self = msg_send ~self ~cmd:(selector "isSystemPhotoLibrary") ~typ:(returning bool)
let isolationQueue self = msg_send ~self ~cmd:(selector "isolationQueue") ~typ:(returning id)
let lastChangeProcessingStarted self = msg_send ~self ~cmd:(selector "lastChangeProcessingStarted") ~typ:(returning double)
let legacySaveImageDataToCameraRoll x ~completionTarget ~completionSelector ~contextInfo self = msg_send ~self ~cmd:(selector "legacySaveImageDataToCameraRoll:completionTarget:completionSelector:contextInfo:") ~typ:(id @-> id @-> _SEL @-> (ptr void) @-> returning void) x completionTarget completionSelector contextInfo
let legacySaveImageToCameraRoll x ~completionTarget ~completionSelector ~contextInfo self = msg_send ~self ~cmd:(selector "legacySaveImageToCameraRoll:completionTarget:completionSelector:contextInfo:") ~typ:(id @-> id @-> _SEL @-> (ptr void) @-> returning void) x completionTarget completionSelector contextInfo
let legacySaveScreenshotToCameraRoll x ~completionTarget ~completionSelector ~contextInfo self = msg_send ~self ~cmd:(selector "legacySaveScreenshotToCameraRoll:completionTarget:completionSelector:contextInfo:") ~typ:(id @-> id @-> _SEL @-> (ptr void) @-> returning void) x completionTarget completionSelector contextInfo
let legacySaveVideoToCameraRoll x ~completionTarget ~completionSelector ~contextInfo self = msg_send ~self ~cmd:(selector "legacySaveVideoToCameraRoll:completionTarget:completionSelector:contextInfo:") ~typ:(id @-> id @-> _SEL @-> (ptr void) @-> returning void) x completionTarget completionSelector contextInfo
let libraryID self = msg_send ~self ~cmd:(selector "libraryID") ~typ:(returning id)
let librarySpecificFetchOptions self = msg_send ~self ~cmd:(selector "librarySpecificFetchOptions") ~typ:(returning id)
let localIdentifierMappingsForCloudIdentifiers x self = msg_send ~self ~cmd:(selector "localIdentifierMappingsForCloudIdentifiers:") ~typ:(id @-> returning id) x
let localIdentifiersForCloudIdentifiers x self = msg_send ~self ~cmd:(selector "localIdentifiersForCloudIdentifiers:") ~typ:(id @-> returning id) x
let lookupCloudIdentifiersForLocalIdentifiers x self = msg_send ~self ~cmd:(selector "lookupCloudIdentifiersForLocalIdentifiers:") ~typ:(id @-> returning id) x
let lookupLocalIdentifiersForCloudIdentifiers x self = msg_send ~self ~cmd:(selector "lookupLocalIdentifiersForCloudIdentifiers:") ~typ:(id @-> returning id) x
let mainQueueConcurrencyPhotoLibrary self = msg_send ~self ~cmd:(selector "mainQueueConcurrencyPhotoLibrary") ~typ:(returning id)
let mainQueueManagedObjectContext self = msg_send ~self ~cmd:(selector "mainQueueManagedObjectContext") ~typ:(returning id)
let mainQueuePhotoLibrary self = msg_send ~self ~cmd:(selector "mainQueuePhotoLibrary") ~typ:(returning id)
let managedObjectContext self = msg_send ~self ~cmd:(selector "managedObjectContext") ~typ:(returning id)
let managedObjectContextForCurrentQueueQoS self = msg_send ~self ~cmd:(selector "managedObjectContextForCurrentQueueQoS") ~typ:(returning id)
let memoryDebugInformationForMemoryWithLocalIdentifier x ~error self = msg_send ~self ~cmd:(selector "memoryDebugInformationForMemoryWithLocalIdentifier:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let migrationDate self = msg_send ~self ~cmd:(selector "migrationDate") ~typ:(returning id)
let newClusteringEligibleFacesFetchOptions self = msg_send ~self ~cmd:(selector "newClusteringEligibleFacesFetchOptions") ~typ:(returning id)
let newFaceCropsToBeGeneratedFetchOptions self = msg_send ~self ~cmd:(selector "newFaceCropsToBeGeneratedFetchOptions") ~typ:(returning id)
let newUnclusteredFacesFetchOptions self = msg_send ~self ~cmd:(selector "newUnclusteredFacesFetchOptions") ~typ:(returning id)
let objectFetchingContextForCurrentQueueQoS self = msg_send ~self ~cmd:(selector "objectFetchingContextForCurrentQueueQoS") ~typ:(returning id)
let objectFetchingManagedObjectContextForObject x ~propertySet self = msg_send ~self ~cmd:(selector "objectFetchingManagedObjectContextForObject:propertySet:") ~typ:(id @-> id @-> returning id) x propertySet
let observeValueForKeyPath x ~ofObject ~change ~context self = msg_send ~self ~cmd:(selector "observeValueForKeyPath:ofObject:change:context:") ~typ:(id @-> id @-> id @-> (ptr void) @-> returning void) x ofObject change context
let openAndWaitWithUpgrade x ~error self = msg_send ~self ~cmd:(selector "openAndWaitWithUpgrade:error:") ~typ:(bool @-> (ptr id) @-> returning bool) x error
let openAndWaitWithUpgrade' x ~options ~error self = msg_send ~self ~cmd:(selector "openAndWaitWithUpgrade:options:error:") ~typ:(bool @-> id @-> (ptr id) @-> returning bool) x options error
let pathManager self = msg_send ~self ~cmd:(selector "pathManager") ~typ:(returning id)
let performCancellableChanges x ~completionHandler self = msg_send ~self ~cmd:(selector "performCancellableChanges:completionHandler:") ~typ:((ptr void) @-> (ptr void) @-> returning void) x completionHandler
let performCancellableChangesAndWait x ~error self = msg_send ~self ~cmd:(selector "performCancellableChangesAndWait:error:") ~typ:((ptr void) @-> (ptr id) @-> returning bool) x error
let performChanges x ~completionHandler self = msg_send ~self ~cmd:(selector "performChanges:completionHandler:") ~typ:((ptr void) @-> (ptr void) @-> returning void) x completionHandler
let performChangesAndWait x ~error self = msg_send ~self ~cmd:(selector "performChangesAndWait:error:") ~typ:((ptr void) @-> (ptr id) @-> returning bool) x error
let performChangesRequest self = msg_send ~self ~cmd:(selector "performChangesRequest") ~typ:(returning id)
let personPromotionProcessingStatusForUserInterface x self = msg_send ~self ~cmd:(selector "personPromotionProcessingStatusForUserInterface:") ~typ:((ptr void) @-> returning void) x
let petVIPModelExists self = msg_send ~self ~cmd:(selector "petVIPModelExists") ~typ:(returning bool)
let photoAnalysisClient self = msg_send ~self ~cmd:(selector "photoAnalysisClient") ~typ:(returning id)
let photoAnalysisClientAllowed self = msg_send ~self ~cmd:(selector "photoAnalysisClientAllowed") ~typ:(returning bool)
let photoLibrary self = msg_send ~self ~cmd:(selector "photoLibrary") ~typ:(returning id)
let photoLibraryBundle self = msg_send ~self ~cmd:(selector "photoLibraryBundle") ~typ:(returning id)
let photoLibraryForCurrentQueueQoS self = msg_send ~self ~cmd:(selector "photoLibraryForCurrentQueueQoS") ~typ:(returning id)
let photoLibraryURL self = msg_send ~self ~cmd:(selector "photoLibraryURL") ~typ:(returning id)
let plLibraryOptionsFromPHOptions x ~createOptions self = msg_send ~self ~cmd:(selector "plLibraryOptionsFromPHOptions:createOptions:") ~typ:(id @-> (ptr ullong) @-> returning id) x createOptions
let postOpenProgress self = msg_send ~self ~cmd:(selector "postOpenProgress") ~typ:(returning id)
let postsPersistentHistoryChangedNotifications self = msg_send ~self ~cmd:(selector "postsPersistentHistoryChangedNotifications") ~typ:(returning bool)
let projectAlbumRootFolderObjectID self = msg_send ~self ~cmd:(selector "projectAlbumRootFolderObjectID") ~typ:(returning id)
let queryForType x ~withIdentifiers ~local self = msg_send ~self ~cmd:(selector "queryForType:withIdentifiers:local:") ~typ:(id @-> id @-> bool @-> returning id) x withIdentifiers local
let ratioOfAssetsAtOrAboveSceneAnalysisVersion x self = msg_send ~self ~cmd:(selector "ratioOfAssetsAtOrAboveSceneAnalysisVersion:") ~typ:(short @-> returning double) x
let ratioOfAssetsWithFacesProcessed self = msg_send ~self ~cmd:(selector "ratioOfAssetsWithFacesProcessed") ~typ:(returning double)
let ratioOfAssetsWithFullAnalysisProcessed self = msg_send ~self ~cmd:(selector "ratioOfAssetsWithFullAnalysisProcessed") ~typ:(returning double)
let ratioOfAssetsWithScenesProcessed self = msg_send ~self ~cmd:(selector "ratioOfAssetsWithScenesProcessed") ~typ:(returning double)
let recordDeleteRequest x self = msg_send ~self ~cmd:(selector "recordDeleteRequest:") ~typ:(id @-> returning void) x
let recordInsertRequest x self = msg_send ~self ~cmd:(selector "recordInsertRequest:") ~typ:(id @-> returning void) x
let recordUpdateRequest x self = msg_send ~self ~cmd:(selector "recordUpdateRequest:") ~typ:(id @-> returning void) x
let registerAvailabilityObserver x self = msg_send ~self ~cmd:(selector "registerAvailabilityObserver:") ~typ:(id @-> returning void) x
let registerChangeObserver x self = msg_send ~self ~cmd:(selector "registerChangeObserver:") ~typ:(id @-> returning void) x
let registerFetchResult x self = msg_send ~self ~cmd:(selector "registerFetchResult:") ~typ:(id @-> returning void) x
let relatedDebugInformationBetweenAssetForLocalIdentifier x ~andRelatedAssetCollectionForLocalIdentifier ~options ~precision ~relatedType ~error self = msg_send ~self ~cmd:(selector "relatedDebugInformationBetweenAssetForLocalIdentifier:andRelatedAssetCollectionForLocalIdentifier:options:precision:relatedType:error:") ~typ:(id @-> id @-> id @-> ullong @-> ullong @-> (ptr id) @-> returning id) x andRelatedAssetCollectionForLocalIdentifier options (ULLong.of_int precision) (ULLong.of_int relatedType) error
let relatedDebugInformationBetweenReferenceAssetCollectionForLocalIdentifier x ~andRelatedAssetCollectionForLocalIdentifier ~options ~precision ~relatedType ~error self = msg_send ~self ~cmd:(selector "relatedDebugInformationBetweenReferenceAssetCollectionForLocalIdentifier:andRelatedAssetCollectionForLocalIdentifier:options:precision:relatedType:error:") ~typ:(id @-> id @-> id @-> ullong @-> ullong @-> (ptr id) @-> returning id) x andRelatedAssetCollectionForLocalIdentifier options (ULLong.of_int precision) (ULLong.of_int relatedType) error
let requestAnalysisProgressCountsWithCompletion x self = msg_send ~self ~cmd:(selector "requestAnalysisProgressCountsWithCompletion:") ~typ:((ptr void) @-> returning void) x
let requestAssetRevGeocodingForAssetLocalIdentifiers x ~withError self = msg_send ~self ~cmd:(selector "requestAssetRevGeocodingForAssetLocalIdentifiers:withError:") ~typ:(id @-> (ptr id) @-> returning bool) x withError
let requestAssetRevGeocodingWithError x self = msg_send ~self ~cmd:(selector "requestAssetRevGeocodingWithError:") ~typ:((ptr id) @-> returning bool) x
let requestAssetSearchKeywordsForAssetCollectionUUIDs x ~ofType ~withOptions ~error self = msg_send ~self ~cmd:(selector "requestAssetSearchKeywordsForAssetCollectionUUIDs:ofType:withOptions:error:") ~typ:(id @-> ullong @-> id @-> (ptr id) @-> returning id) x (ULLong.of_int ofType) withOptions error
let requestEnrichmentWithOptions x ~error self = msg_send ~self ~cmd:(selector "requestEnrichmentWithOptions:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let requestGenerateQuestionsWithOptions x ~reply self = msg_send ~self ~cmd:(selector "requestGenerateQuestionsWithOptions:reply:") ~typ:(id @-> (ptr void) @-> returning void) x reply
let requestGraphReadyNotificationWithCoalescingIdentifier x ~completion self = msg_send ~self ~cmd:(selector "requestGraphReadyNotificationWithCoalescingIdentifier:completion:") ~typ:(id @-> (ptr void) @-> returning void) x completion
let requestGraphRebuildProgressWithCompletion x self = msg_send ~self ~cmd:(selector "requestGraphRebuildProgressWithCompletion:") ~typ:((ptr void) @-> returning void) x
let requestGraphRebuildWithOptions x ~progress ~completion self = msg_send ~self ~cmd:(selector "requestGraphRebuildWithOptions:progress:completion:") ~typ:(id @-> id @-> (ptr void) @-> returning void) x progress completion
let requestGraphRebuildWithProgress x ~completion self = msg_send ~self ~cmd:(selector "requestGraphRebuildWithProgress:completion:") ~typ:(id @-> (ptr void) @-> returning void) x completion
let requestGraphSearchMetadataWithOptions x ~error self = msg_send ~self ~cmd:(selector "requestGraphSearchMetadataWithOptions:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let requestHighlightCollectionEnrichmentWithOptions x ~error self = msg_send ~self ~cmd:(selector "requestHighlightCollectionEnrichmentWithOptions:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let requestHighlightEnrichmentWithOptions x ~error self = msg_send ~self ~cmd:(selector "requestHighlightEnrichmentWithOptions:error:") ~typ:(id @-> (ptr id) @-> returning bool) x error
let requestHighlightEstimatesWithCompletion x self = msg_send ~self ~cmd:(selector "requestHighlightEstimatesWithCompletion:") ~typ:((ptr void) @-> returning void) x
let requestProcessingTypes x ~forAssetsWithLocalIdentifiers ~progressHandler ~completionHandler self = msg_send ~self ~cmd:(selector "requestProcessingTypes:forAssetsWithLocalIdentifiers:progressHandler:completionHandler:") ~typ:(ullong @-> id @-> (ptr void) @-> (ptr void) @-> returning int) (ULLong.of_int x) forAssetsWithLocalIdentifiers progressHandler completionHandler
let requestSearchIndexGraphUpdates x ~supportingData ~withCompletion self = msg_send ~self ~cmd:(selector "requestSearchIndexGraphUpdates:supportingData:withCompletion:") ~typ:(id @-> id @-> (ptr void) @-> returning void) x supportingData withCompletion
let requestSearchIndexKeywordsForAssetCollectionUUIDs x ~ofType ~withOptions ~error self = msg_send ~self ~cmd:(selector "requestSearchIndexKeywordsForAssetCollectionUUIDs:ofType:withOptions:error:") ~typ:(id @-> ullong @-> id @-> (ptr id) @-> returning id) x (ULLong.of_int ofType) withOptions error
let requestSearchIndexUpdates x ~withCompletion self = msg_send ~self ~cmd:(selector "requestSearchIndexUpdates:withCompletion:") ~typ:(id @-> (ptr void) @-> returning void) x withCompletion
let requestSearchableAssetUUIDsBySocialGroupForAssetCollectionUUIDs x ~ofType ~isFullAnalysis ~withOptions ~error self = msg_send ~self ~cmd:(selector "requestSearchableAssetUUIDsBySocialGroupForAssetCollectionUUIDs:ofType:isFullAnalysis:withOptions:error:") ~typ:(id @-> ullong @-> bool @-> id @-> (ptr id) @-> returning id) x (ULLong.of_int ofType) isFullAnalysis withOptions error
let requestSyndicationProcessingWithOptions x ~reply self = msg_send ~self ~cmd:(selector "requestSyndicationProcessingWithOptions:reply:") ~typ:(id @-> (ptr void) @-> returning void) x reply
let requestSynonymsDictionariesWithError x self = msg_send ~self ~cmd:(selector "requestSynonymsDictionariesWithError:") ~typ:((ptr id) @-> returning id) x
let requestTextFeaturesForMomentLocalIdentifiers x ~error self = msg_send ~self ~cmd:(selector "requestTextFeaturesForMomentLocalIdentifiers:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let requestTotalProgressCountsForWorkerType x ~states ~completion self = msg_send ~self ~cmd:(selector "requestTotalProgressCountsForWorkerType:states:completion:") ~typ:(short @-> id @-> (ptr void) @-> returning void) x states completion
let requestTotalProgressCountsWithCompletion x self = msg_send ~self ~cmd:(selector "requestTotalProgressCountsWithCompletion:") ~typ:((ptr void) @-> returning void) x
let requestZeroKeywordsWithOptions x ~error self = msg_send ~self ~cmd:(selector "requestZeroKeywordsWithOptions:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let resetFaceAnalysisWithResetLevel x ~completionHandler self = msg_send ~self ~cmd:(selector "resetFaceAnalysisWithResetLevel:completionHandler:") ~typ:(llong @-> (ptr void) @-> returning void) (LLong.of_int x) completionHandler
let resetLimitedLibraryAccessForApplication x ~completionHandler self = msg_send ~self ~cmd:(selector "resetLimitedLibraryAccessForApplication:completionHandler:") ~typ:(id @-> (ptr void) @-> returning void) x completionHandler
let runPFLWithAttachments x ~recipeUserInfo ~resultBlock self = msg_send ~self ~cmd:(selector "runPFLWithAttachments:recipeUserInfo:resultBlock:") ~typ:(id @-> id @-> (ptr void) @-> returning void) x recipeUserInfo resultBlock
let sceneAnalysisProgressForHighlight x ~usingSceneVersion self = msg_send ~self ~cmd:(selector "sceneAnalysisProgressForHighlight:usingSceneVersion:") ~typ:(id @-> short @-> returning double) x usingSceneVersion
let sceneTaxonomyDetectorNodeSceneIDsFromSceneID x ~sceneTaxonomy self = msg_send ~self ~cmd:(selector "sceneTaxonomyDetectorNodeSceneIDsFromSceneID:sceneTaxonomy:") ~typ:(uint @-> id @-> returning id) x sceneTaxonomy
let setAvailabilityObservers x self = msg_send ~self ~cmd:(selector "setAvailabilityObservers:") ~typ:(id @-> returning void) x
let setChangeNotificationInfo x self = msg_send ~self ~cmd:(selector "setChangeNotificationInfo:") ~typ:(id @-> returning void) x
let setChangeRequest x ~forUUID self = msg_send ~self ~cmd:(selector "setChangeRequest:forUUID:") ~typ:(id @-> id @-> returning void) x forUUID
let setClearsOIDCacheAfterFetchResultDealloc x self = msg_send ~self ~cmd:(selector "setClearsOIDCacheAfterFetchResultDealloc:") ~typ:(bool @-> returning void) x
let setExternalChangeObservers x self = msg_send ~self ~cmd:(selector "setExternalChangeObservers:") ~typ:(id @-> returning void) x
let setFetchResultsRegisteredForChangeNotifications x self = msg_send ~self ~cmd:(selector "setFetchResultsRegisteredForChangeNotifications:") ~typ:(id @-> returning void) x
let setImageConversionServiceClient x self = msg_send ~self ~cmd:(selector "setImageConversionServiceClient:") ~typ:(id @-> returning void) x
let setInternalChangeObservers x self = msg_send ~self ~cmd:(selector "setInternalChangeObservers:") ~typ:(id @-> returning void) x
let setIsChangeHandlingActive x self = msg_send ~self ~cmd:(selector "setIsChangeHandlingActive:") ~typ:(bool @-> returning void) x
let setIsChangeHandlingAuthorized x self = msg_send ~self ~cmd:(selector "setIsChangeHandlingAuthorized:") ~typ:(bool @-> returning void) x
let setIsChangeProcessingPending x self = msg_send ~self ~cmd:(selector "setIsChangeProcessingPending:") ~typ:(bool @-> returning void) x
let setIsolationQueue x self = msg_send ~self ~cmd:(selector "setIsolationQueue:") ~typ:(id @-> returning void) x
let setLastChangeProcessingStarted x self = msg_send ~self ~cmd:(selector "setLastChangeProcessingStarted:") ~typ:(double @-> returning void) x
let setPerformChangesRequest x self = msg_send ~self ~cmd:(selector "setPerformChangesRequest:") ~typ:(id @-> returning void) x
let setPostsPersistentHistoryChangedNotifications x self = msg_send ~self ~cmd:(selector "setPostsPersistentHistoryChangedNotifications:") ~typ:(bool @-> returning void) x
let setTaxonomyResolver x self = msg_send ~self ~cmd:(selector "setTaxonomyResolver:") ~typ:(id @-> returning void) x
let setTransactionQueue x self = msg_send ~self ~cmd:(selector "setTransactionQueue:") ~typ:(id @-> returning void) x
let setUnavailabilityReason x self = msg_send ~self ~cmd:(selector "setUnavailabilityReason:") ~typ:(id @-> returning void) x
let setUnknownMergeEvent x self = msg_send ~self ~cmd:(selector "setUnknownMergeEvent:") ~typ:(bool @-> returning void) x
let setVideoConversionServiceClient x self = msg_send ~self ~cmd:(selector "setVideoConversionServiceClient:") ~typ:(id @-> returning void) x
let setWidgetTimelineGeneratedForDisplaySize x self = msg_send ~self ~cmd:(selector "setWidgetTimelineGeneratedForDisplaySize:") ~typ:(CGSize.t @-> returning void) x
let sharingMessageSuggestionDebugInformationForAssetCollectionLocalIdentifier x ~error self = msg_send ~self ~cmd:(selector "sharingMessageSuggestionDebugInformationForAssetCollectionLocalIdentifier:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let sharingSuggestionDebugInformationForAssetCollectionLocalIdentifier x ~error self = msg_send ~self ~cmd:(selector "sharingSuggestionDebugInformationForAssetCollectionLocalIdentifier:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let sharingSuggestionWithRandomPick x ~fallbackToRecentMoments ~needsNotification self = msg_send ~self ~cmd:(selector "sharingSuggestionWithRandomPick:fallbackToRecentMoments:needsNotification:") ~typ:(bool @-> bool @-> bool @-> returning id) x fallbackToRecentMoments needsNotification
let shouldMobileSlideShowLaunchWithError x self = msg_send ~self ~cmd:(selector "shouldMobileSlideShowLaunchWithError:") ~typ:((ptr id) @-> returning bool) x
let simulateMemoriesNotificationWithOptions x ~reply self = msg_send ~self ~cmd:(selector "simulateMemoriesNotificationWithOptions:reply:") ~typ:(id @-> (ptr void) @-> returning void) x reply
let socialGroupsForPersonIdentifiers x ~error self = msg_send ~self ~cmd:(selector "socialGroupsForPersonIdentifiers:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let sortedArrayOfPersonIdentifiers x ~error self = msg_send ~self ~cmd:(selector "sortedArrayOfPersonIdentifiers:error:") ~typ:(id @-> (ptr id) @-> returning id) x error
let statusDidChange x self = msg_send ~self ~cmd:(selector "statusDidChange:") ~typ:(id @-> returning void) x
let suggestedContactsForPersonLocalIdentifier x self = msg_send ~self ~cmd:(selector "suggestedContactsForPersonLocalIdentifier:") ~typ:(id @-> returning id) x
let suggestedMePersonIdentifierWithError x self = msg_send ~self ~cmd:(selector "suggestedMePersonIdentifierWithError:") ~typ:((ptr id) @-> returning id) x
let suggestionsForPersonLocalIdentifier x ~clusterSequenceNumbers ~excludePersonLocalIdentifiers ~minimumSuggestionFaceCount self = msg_send ~self ~cmd:(selector "suggestionsForPersonLocalIdentifier:clusterSequenceNumbers:excludePersonLocalIdentifiers:minimumSuggestionFaceCount:") ~typ:(id @-> id @-> id @-> ullong @-> returning id) x clusterSequenceNumbers excludePersonLocalIdentifiers (ULLong.of_int minimumSuggestionFaceCount)
let taxonomyResolver self = msg_send ~self ~cmd:(selector "taxonomyResolver") ~typ:(returning id)
let transactionPhotoLibrary self = msg_send ~self ~cmd:(selector "transactionPhotoLibrary") ~typ:(returning id)
let transactionQueue self = msg_send ~self ~cmd:(selector "transactionQueue") ~typ:(returning id)
let type_ self = msg_send ~self ~cmd:(selector "type") ~typ:(returning ushort)
let unavailabilityReason self = msg_send ~self ~cmd:(selector "unavailabilityReason") ~typ:(returning id)
let unknownMergeEvent self = msg_send ~self ~cmd:(selector "unknownMergeEvent") ~typ:(returning bool)
let unregisterAvailabilityObserver x self = msg_send ~self ~cmd:(selector "unregisterAvailabilityObserver:") ~typ:(id @-> returning void) x
let unregisterChangeObserver x self = msg_send ~self ~cmd:(selector "unregisterChangeObserver:") ~typ:(id @-> returning void) x
let unregisterFetchResult x self = msg_send ~self ~cmd:(selector "unregisterFetchResult:") ~typ:(id @-> returning void) x
let upgradePhotoLibraryUsingOptions x ~completion self = msg_send ~self ~cmd:(selector "upgradePhotoLibraryUsingOptions:completion:") ~typ:(id @-> (ptr void) @-> returning id) x completion
let urlForApplicationDataFolderIdentifier x self = msg_send ~self ~cmd:(selector "urlForApplicationDataFolderIdentifier:") ~typ:(llong @-> returning id) (LLong.of_int x)
let userInitiatedQueuePhotoLibrary self = msg_send ~self ~cmd:(selector "userInitiatedQueuePhotoLibrary") ~typ:(returning id)
let uuid self = msg_send ~self ~cmd:(selector "uuid") ~typ:(returning id)
let variationCache self = msg_send ~self ~cmd:(selector "variationCache") ~typ:(returning id)
let videoConversionServiceClient self = msg_send ~self ~cmd:(selector "videoConversionServiceClient") ~typ:(returning id)
let wellKnownPhotoLibraryIdentifier self = msg_send ~self ~cmd:(selector "wellKnownPhotoLibraryIdentifier") ~typ:(returning llong)